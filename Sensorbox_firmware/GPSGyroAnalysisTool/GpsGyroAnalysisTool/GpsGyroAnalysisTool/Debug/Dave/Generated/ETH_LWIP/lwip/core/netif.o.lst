   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "netif.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm netif_list,4,4
  20              	 .comm netif_default,4,4
  21              	 .section .bss.netif_num,"aw",%nobits
  24              	netif_num:
  25 0000 00       	 .space 1
  26              	 .section .text.netif_init,"ax",%progbits
  27              	 .align 2
  28              	 .global netif_init
  29              	 .thumb
  30              	 .thumb_func
  32              	netif_init:
  33              	.LFB137:
  34              	 .file 1 "../Dave/Generated/ETH_LWIP/lwip/core/netif.c"
   1:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
   2:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @file
   3:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * lwIP network interface abstraction
   4:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
   5:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @defgroup netif Network interface (NETIF)
   6:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup callbackstyle_api
   7:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
   8:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @defgroup netif_ip4 IPv4 address handling
   9:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
  10:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
  11:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @defgroup netif_ip6 IPv6 address handling
  12:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
  13:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
  14:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @defgroup netif_cd Client data handling
  15:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Store data (void*) on a netif for application usage.
  16:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @see @ref LWIP_NUM_NETIF_CLIENT_DATA
  17:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
  18:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
  19:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
  20:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /*
  21:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  22:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * All rights reserved.
  23:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
  24:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Redistribution and use in source and binary forms, with or without modification,
  25:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * are permitted provided that the following conditions are met:
  26:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
  27:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  28:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *    this list of conditions and the following disclaimer.
  29:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  30:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *    this list of conditions and the following disclaimer in the documentation
  31:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *    and/or other materials provided with the distribution.
  32:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * 3. The name of the author may not be used to endorse or promote products
  33:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *    derived from this software without specific prior written permission.
  34:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
  35:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  36:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  37:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  38:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  39:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  40:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  41:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  42:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  43:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  44:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * OF SUCH DAMAGE.
  45:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
  46:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * This file is part of the lwIP TCP/IP stack.
  47:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
  48:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Author: Adam Dunkels <adam@sics.se>
  49:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
  50:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
  51:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/opt.h"
  52:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
  53:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include <string.h> /* memset */
  54:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include <stdlib.h> /* atoi */
  55:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
  56:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/def.h"
  57:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/ip_addr.h"
  58:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/ip6_addr.h"
  59:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/netif.h"
  60:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/priv/tcp_priv.h"
  61:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/udp.h"
  62:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/priv/raw_priv.h"
  63:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/snmp.h"
  64:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/igmp.h"
  65:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/etharp.h"
  66:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/stats.h"
  67:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/sys.h"
  68:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/ip.h"
  69:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if ENABLE_LOOPBACK
  70:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
  71:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/tcpip.h"
  72:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
  73:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* ENABLE_LOOPBACK */
  74:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
  75:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/netif/ethernet.h"
  76:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
  77:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_AUTOIP
  78:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/autoip.h"
  79:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_AUTOIP */
  80:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_DHCP
  81:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/dhcp.h"
  82:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_DHCP */
  83:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_DHCP6
  84:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/dhcp6.h"
  85:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_DHCP6 */
  86:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_MLD
  87:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/mld6.h"
  88:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_MLD */
  89:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
  90:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #include "ETH_LWIP/lwip/include/lwip/nd6.h"
  91:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
  92:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
  93:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
  94:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define NETIF_STATUS_CALLBACK(n) do{ if (n->status_callback) { (n->status_callback)(n); }}while(0)
  95:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else
  96:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define NETIF_STATUS_CALLBACK(n)
  97:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
  98:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
  99:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
 100:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define NETIF_LINK_CALLBACK(n) do{ if (n->link_callback) { (n->link_callback)(n); }}while(0)
 101:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else
 102:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define NETIF_LINK_CALLBACK(n)
 103:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
 104:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 105:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 106:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static netif_ext_callback_t *ext_callback;
 107:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 108:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 109:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if !LWIP_SINGLE_NETIF
 110:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** struct netif *netif_list;
 111:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* !LWIP_SINGLE_NETIF */
 112:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** struct netif *netif_default;
 113:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 114:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define netif_index_to_num(index)   ((index) - 1)
 115:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static u8_t netif_num;
 116:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 117:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 0
 118:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static u8_t netif_client_id;
 119:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 120:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 121:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define NETIF_REPORT_TYPE_IPV4  0x01
 122:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define NETIF_REPORT_TYPE_IPV6  0x02
 123:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static void netif_issue_reports(struct netif *netif, u8_t report_type);
 124:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 125:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 126:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t netif_null_output_ip6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr);
 127:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
 128:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 129:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t netif_null_output_ip4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr);
 130:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
 131:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 132:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_HAVE_LOOPIF
 133:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 134:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t netif_loop_output_ipv4(struct netif *netif, struct pbuf *p, const ip4_addr_t *addr);
 135:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 136:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 137:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t netif_loop_output_ipv6(struct netif *netif, struct pbuf *p, const ip6_addr_t *addr);
 138:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 139:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 140:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 141:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static struct netif loop_netif;
 142:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 143:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 144:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Initialize a lwip network interface structure for a loopback interface
 145:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 146:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the lwip network interface structure for this loopif
 147:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @return ERR_OK if the loopif is initialized
 148:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *         ERR_MEM if private data couldn't be allocated
 149:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 150:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t
 151:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_loopif_init(struct netif *netif)
 152:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 153:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_loopif_init: invalid netif", netif != NULL);
 154:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 155:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* initialize the snmp variables and counters inside the struct netif
 156:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    * ifSpeed: no assumption can be made!
 157:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    */
 158:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   MIB2_INIT_NETIF(netif, snmp_ifType_softwareLoopback, 0);
 159:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 160:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->name[0] = 'l';
 161:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->name[1] = 'o';
 162:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 163:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->output = netif_loop_output_ipv4;
 164:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 165:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 166:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->output_ip6 = netif_loop_output_ipv6;
 167:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 168:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_LOOPIF_MULTICAST
 169:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_set_flags(netif, NETIF_FLAG_IGMP);
 170:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 171:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   NETIF_SET_CHECKSUM_CTRL(netif, NETIF_CHECKSUM_DISABLE_ALL);
 172:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return ERR_OK;
 173:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 174:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
 175:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 176:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 177:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_init(void)
 178:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
  35              	 .loc 1 178 0
  36              	 .cfi_startproc
  37              	 
  38              	 
  39              	 
  40 0000 80B4     	 push {r7}
  41              	.LCFI0:
  42              	 .cfi_def_cfa_offset 4
  43              	 .cfi_offset 7,-4
  44 0002 00AF     	 add r7,sp,#0
  45              	.LCFI1:
  46              	 .cfi_def_cfa_register 7
 179:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_HAVE_LOOPIF
 180:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 181:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define LOOPIF_ADDRINIT &loop_ipaddr, &loop_netmask, &loop_gw,
 182:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip4_addr_t loop_ipaddr, loop_netmask, loop_gw;
 183:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   IP4_ADDR(&loop_gw, 127, 0, 0, 1);
 184:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   IP4_ADDR(&loop_ipaddr, 127, 0, 0, 1);
 185:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   IP4_ADDR(&loop_netmask, 255, 0, 0, 0);
 186:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else /* LWIP_IPV4 */
 187:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #define LOOPIF_ADDRINIT
 188:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
 189:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 190:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if NO_SYS
 191:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_add(&loop_netif, LOOPIF_ADDRINIT NULL, netif_loopif_init, ip_input);
 192:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else  /* NO_SYS */
 193:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_add(&loop_netif, LOOPIF_ADDRINIT NULL, netif_loopif_init, tcpip_input);
 194:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* NO_SYS */
 195:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 196:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 197:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   IP_ADDR6_HOST(loop_netif.ip6_addr, 0, 0, 0, 0x00000001UL);
 198:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   loop_netif.ip6_addr_state[0] = IP6_ADDR_VALID;
 199:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
 200:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 201:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_set_link_up(&loop_netif);
 202:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_set_up(&loop_netif);
 203:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 204:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
 205:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
  47              	 .loc 1 205 0
  48 0004 BD46     	 mov sp,r7
  49              	.LCFI2:
  50              	 .cfi_def_cfa_register 13
  51              	 
  52 0006 5DF8047B 	 ldr r7,[sp],#4
  53              	.LCFI3:
  54              	 .cfi_restore 7
  55              	 .cfi_def_cfa_offset 0
  56 000a 7047     	 bx lr
  57              	 .cfi_endproc
  58              	.LFE137:
  60              	 .section .text.netif_input,"ax",%progbits
  61              	 .align 2
  62              	 .global netif_input
  63              	 .thumb
  64              	 .thumb_func
  66              	netif_input:
  67              	.LFB138:
 206:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 207:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 208:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup lwip_nosys
 209:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Forwards a received packet for input processing with
 210:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * ethernet_input() or ip_input() depending on netif flags.
 211:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Don't call directly, pass to netif_add() and call
 212:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * netif->input().
 213:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Only works if the netif driver correctly sets
 214:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * NETIF_FLAG_ETHARP and/or NETIF_FLAG_ETHERNET flag!
 215:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 216:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** err_t
 217:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_input(struct pbuf *p, struct netif *inp)
 218:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
  68              	 .loc 1 218 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72 0000 80B5     	 push {r7,lr}
  73              	.LCFI4:
  74              	 .cfi_def_cfa_offset 8
  75              	 .cfi_offset 7,-8
  76              	 .cfi_offset 14,-4
  77 0002 82B0     	 sub sp,sp,#8
  78              	.LCFI5:
  79              	 .cfi_def_cfa_offset 16
  80 0004 00AF     	 add r7,sp,#0
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 7
  83 0006 7860     	 str r0,[r7,#4]
  84 0008 3960     	 str r1,[r7]
 219:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 220:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 221:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_input: invalid pbuf", p != NULL);
 222:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_input: invalid netif", inp != NULL);
 223:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 224:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_ETHERNET
 225:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (inp->flags & (NETIF_FLAG_ETHARP | NETIF_FLAG_ETHERNET)) {
  85              	 .loc 1 225 0
  86 000a 3B68     	 ldr r3,[r7]
  87 000c 93F82D30 	 ldrb r3,[r3,#45]
  88 0010 03F01803 	 and r3,r3,#24
  89 0014 002B     	 cmp r3,#0
  90 0016 05D0     	 beq .L3
 226:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return ethernet_input(p, inp);
  91              	 .loc 1 226 0
  92 0018 7868     	 ldr r0,[r7,#4]
  93 001a 3968     	 ldr r1,[r7]
  94 001c FFF7FEFF 	 bl ethernet_input
  95 0020 0346     	 mov r3,r0
  96 0022 04E0     	 b .L4
  97              	.L3:
 227:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   } else
 228:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_ETHERNET */
 229:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return ip_input(p, inp);
  98              	 .loc 1 229 0
  99 0024 7868     	 ldr r0,[r7,#4]
 100 0026 3968     	 ldr r1,[r7]
 101 0028 FFF7FEFF 	 bl ip4_input
 102 002c 0346     	 mov r3,r0
 103              	.L4:
 104 002e 5BB2     	 sxtb r3,r3
 230:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 105              	 .loc 1 230 0
 106 0030 1846     	 mov r0,r3
 107 0032 0837     	 adds r7,r7,#8
 108              	.LCFI7:
 109              	 .cfi_def_cfa_offset 8
 110 0034 BD46     	 mov sp,r7
 111              	.LCFI8:
 112              	 .cfi_def_cfa_register 13
 113              	 
 114 0036 80BD     	 pop {r7,pc}
 115              	 .cfi_endproc
 116              	.LFE138:
 118              	 .section .text.netif_add_noaddr,"ax",%progbits
 119              	 .align 2
 120              	 .global netif_add_noaddr
 121              	 .thumb
 122              	 .thumb_func
 124              	netif_add_noaddr:
 125              	.LFB139:
 231:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 232:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 233:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 234:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Add a network interface to the list of lwIP netifs.
 235:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 236:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Same as @ref netif_add but without IPv4 addresses
 237:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 238:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** struct netif *
 239:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_add_noaddr(struct netif *netif, void *state, netif_init_fn init, netif_input_fn input)
 240:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 126              	 .loc 1 240 0
 127              	 .cfi_startproc
 128              	 
 129              	 
 130 0000 80B5     	 push {r7,lr}
 131              	.LCFI9:
 132              	 .cfi_def_cfa_offset 8
 133              	 .cfi_offset 7,-8
 134              	 .cfi_offset 14,-4
 135 0002 88B0     	 sub sp,sp,#32
 136              	.LCFI10:
 137              	 .cfi_def_cfa_offset 40
 138 0004 04AF     	 add r7,sp,#16
 139              	.LCFI11:
 140              	 .cfi_def_cfa 7,24
 141 0006 F860     	 str r0,[r7,#12]
 142 0008 B960     	 str r1,[r7,#8]
 143 000a 7A60     	 str r2,[r7,#4]
 144 000c 3B60     	 str r3,[r7]
 241:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return netif_add(netif,
 145              	 .loc 1 241 0
 146 000e BB68     	 ldr r3,[r7,#8]
 147 0010 0093     	 str r3,[sp]
 148 0012 7B68     	 ldr r3,[r7,#4]
 149 0014 0193     	 str r3,[sp,#4]
 150 0016 3B68     	 ldr r3,[r7]
 151 0018 0293     	 str r3,[sp,#8]
 152 001a F868     	 ldr r0,[r7,#12]
 153 001c 0021     	 movs r1,#0
 154 001e 0022     	 movs r2,#0
 155 0020 0023     	 movs r3,#0
 156 0022 FFF7FEFF 	 bl netif_add
 157 0026 0346     	 mov r3,r0
 242:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 243:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                    NULL, NULL, NULL,
 244:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4*/
 245:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                    state, init, input);
 246:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 158              	 .loc 1 246 0
 159 0028 1846     	 mov r0,r3
 160 002a 1037     	 adds r7,r7,#16
 161              	.LCFI12:
 162              	 .cfi_def_cfa_offset 8
 163 002c BD46     	 mov sp,r7
 164              	.LCFI13:
 165              	 .cfi_def_cfa_register 13
 166              	 
 167 002e 80BD     	 pop {r7,pc}
 168              	 .cfi_endproc
 169              	.LFE139:
 171              	 .section .text.netif_add,"ax",%progbits
 172              	 .align 2
 173              	 .global netif_add
 174              	 .thumb
 175              	 .thumb_func
 177              	netif_add:
 178              	.LFB140:
 247:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 248:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 249:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 250:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Add a network interface to the list of lwIP netifs.
 251:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 252:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif a pre-allocated netif structure
 253:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param ipaddr IP address for the new netif
 254:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netmask network mask for the new netif
 255:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param gw default gateway IP address for the new netif
 256:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param state opaque data passed to the new netif
 257:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param init callback function that initializes the interface
 258:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param input callback function that is called to pass
 259:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * ingress packets up in the protocol layer stack.\n
 260:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * It is recommended to use a function that passes the input directly
 261:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * to the stack (netif_input(), NO_SYS=1 mode) or via sending a
 262:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * message to TCPIP thread (tcpip_input(), NO_SYS=0 mode).\n
 263:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * These functions use netif flags NETIF_FLAG_ETHARP and NETIF_FLAG_ETHERNET
 264:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * to decide whether to forward to ethernet_input() or ip_input().
 265:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * In other words, the functions only work when the netif
 266:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * driver is implemented correctly!\n
 267:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Most members of struct netif should be be initialized by the
 268:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * netif init function = netif driver (init parameter of this function).\n
 269:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * IPv6: Don't forget to call netif_create_ip6_linklocal_address() after
 270:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * setting the MAC address in struct netif.hwaddr
 271:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * (IPv6 requires a link-local address).
 272:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 273:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @return netif, or NULL if failed.
 274:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 275:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** struct netif *
 276:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_add(struct netif *netif,
 277:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 278:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****           const ip4_addr_t *ipaddr, const ip4_addr_t *netmask, const ip4_addr_t *gw,
 279:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
 280:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****           void *state, netif_init_fn init, netif_input_fn input)
 281:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 179              	 .loc 1 281 0
 180              	 .cfi_startproc
 181              	 
 182              	 
 183 0000 80B5     	 push {r7,lr}
 184              	.LCFI14:
 185              	 .cfi_def_cfa_offset 8
 186              	 .cfi_offset 7,-8
 187              	 .cfi_offset 14,-4
 188 0002 86B0     	 sub sp,sp,#24
 189              	.LCFI15:
 190              	 .cfi_def_cfa_offset 32
 191 0004 00AF     	 add r7,sp,#0
 192              	.LCFI16:
 193              	 .cfi_def_cfa_register 7
 194 0006 F860     	 str r0,[r7,#12]
 195 0008 B960     	 str r1,[r7,#8]
 196 000a 7A60     	 str r2,[r7,#4]
 197 000c 3B60     	 str r3,[r7]
 282:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 283:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   s8_t i;
 284:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 285:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 286:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 287:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 288:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_SINGLE_NETIF
 289:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_default != NULL) {
 290:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_ASSERT("single netif already set", 0);
 291:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return NULL;
 292:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 293:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 294:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 295:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_add: invalid netif", netif != NULL, return NULL);
 198              	 .loc 1 295 0
 199 000e FB68     	 ldr r3,[r7,#12]
 200 0010 002B     	 cmp r3,#0
 201 0012 01D1     	 bne .L8
 202              	 .loc 1 295 0 is_stmt 0 discriminator 1
 203 0014 0023     	 movs r3,#0
 204 0016 86E0     	 b .L9
 205              	.L8:
 296:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_add: No init function given", init != NULL, return NULL);
 206              	 .loc 1 296 0 is_stmt 1
 207 0018 7B6A     	 ldr r3,[r7,#36]
 208 001a 002B     	 cmp r3,#0
 209 001c 01D1     	 bne .L10
 210              	 .loc 1 296 0 is_stmt 0 discriminator 1
 211 001e 0023     	 movs r3,#0
 212 0020 81E0     	 b .L9
 213              	.L10:
 297:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 298:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 299:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (ipaddr == NULL) {
 214              	 .loc 1 299 0 is_stmt 1
 215 0022 BB68     	 ldr r3,[r7,#8]
 216 0024 002B     	 cmp r3,#0
 217 0026 01D1     	 bne .L11
 300:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ipaddr = ip_2_ip4(IP4_ADDR_ANY);
 218              	 .loc 1 300 0
 219 0028 414B     	 ldr r3,.L22
 220 002a BB60     	 str r3,[r7,#8]
 221              	.L11:
 301:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 302:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netmask == NULL) {
 222              	 .loc 1 302 0
 223 002c 7B68     	 ldr r3,[r7,#4]
 224 002e 002B     	 cmp r3,#0
 225 0030 01D1     	 bne .L12
 303:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netmask = ip_2_ip4(IP4_ADDR_ANY);
 226              	 .loc 1 303 0
 227 0032 3F4B     	 ldr r3,.L22
 228 0034 7B60     	 str r3,[r7,#4]
 229              	.L12:
 304:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 305:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (gw == NULL) {
 230              	 .loc 1 305 0
 231 0036 3B68     	 ldr r3,[r7]
 232 0038 002B     	 cmp r3,#0
 233 003a 01D1     	 bne .L13
 306:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     gw = ip_2_ip4(IP4_ADDR_ANY);
 234              	 .loc 1 306 0
 235 003c 3C4B     	 ldr r3,.L22
 236 003e 3B60     	 str r3,[r7]
 237              	.L13:
 307:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 308:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 309:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* reset new interface configuration state */
 310:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_set_zero_ip4(&netif->ip_addr);
 238              	 .loc 1 310 0
 239 0040 FB68     	 ldr r3,[r7,#12]
 240 0042 0022     	 movs r2,#0
 241 0044 5A60     	 str r2,[r3,#4]
 311:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_set_zero_ip4(&netif->netmask);
 242              	 .loc 1 311 0
 243 0046 FB68     	 ldr r3,[r7,#12]
 244 0048 0022     	 movs r2,#0
 245 004a 9A60     	 str r2,[r3,#8]
 312:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_set_zero_ip4(&netif->gw);
 246              	 .loc 1 312 0
 247 004c FB68     	 ldr r3,[r7,#12]
 248 004e 0022     	 movs r2,#0
 249 0050 DA60     	 str r2,[r3,#12]
 313:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->output = netif_null_output_ip4;
 250              	 .loc 1 313 0
 251 0052 FB68     	 ldr r3,[r7,#12]
 252 0054 374A     	 ldr r2,.L22+4
 253 0056 5A61     	 str r2,[r3,#20]
 314:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
 315:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 316:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
 317:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_addr_set_zero_ip6(&netif->ip6_addr[i]);
 318:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->ip6_addr_state[i] = IP6_ADDR_INVALID;
 319:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_ADDRESS_LIFETIMES
 320:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->ip6_addr_valid_life[i] = IP6_ADDR_LIFE_STATIC;
 321:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->ip6_addr_pref_life[i] = IP6_ADDR_LIFE_STATIC;
 322:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_ADDRESS_LIFETIMES */
 323:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 324:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->output_ip6 = netif_null_output_ip6;
 325:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
 326:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   NETIF_SET_CHECKSUM_CTRL(netif, NETIF_CHECKSUM_ENABLE_ALL);
 327:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->mtu = 0;
 254              	 .loc 1 327 0
 255 0058 FB68     	 ldr r3,[r7,#12]
 256 005a 0022     	 movs r2,#0
 257 005c 9A84     	 strh r2,[r3,#36]
 328:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->flags = 0;
 258              	 .loc 1 328 0
 259 005e FB68     	 ldr r3,[r7,#12]
 260 0060 0022     	 movs r2,#0
 261 0062 83F82D20 	 strb r2,[r3,#45]
 329:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #ifdef netif_get_client_data
 330:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   memset(netif->client_data, 0, sizeof(netif->client_data));
 331:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NUM_NETIF_CLIENT_DATA */
 332:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 333:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_AUTOCONFIG
 334:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* IPv6 address autoconfiguration not enabled by default */
 335:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->ip6_autoconfig_enabled = 0;
 336:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_AUTOCONFIG */
 337:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   nd6_restart_netif(netif);
 338:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
 339:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
 340:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->status_callback = NULL;
 341:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
 342:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
 343:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->link_callback = NULL;
 262              	 .loc 1 343 0
 263 0066 FB68     	 ldr r3,[r7,#12]
 264 0068 0022     	 movs r2,#0
 265 006a DA61     	 str r2,[r3,#28]
 344:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
 345:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IGMP
 346:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->igmp_mac_filter = NULL;
 347:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IGMP */
 348:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6 && LWIP_IPV6_MLD
 349:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->mld_mac_filter = NULL;
 350:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 && LWIP_IPV6_MLD */
 351:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if ENABLE_LOOPBACK
 352:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->loop_first = NULL;
 353:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->loop_last = NULL;
 354:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* ENABLE_LOOPBACK */
 355:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 356:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* remember netif specific state information data */
 357:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->state = state;
 266              	 .loc 1 357 0
 267 006c FB68     	 ldr r3,[r7,#12]
 268 006e 3A6A     	 ldr r2,[r7,#32]
 269 0070 1A62     	 str r2,[r3,#32]
 358:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->num = netif_num;
 270              	 .loc 1 358 0
 271 0072 314B     	 ldr r3,.L22+8
 272 0074 1A78     	 ldrb r2,[r3]
 273 0076 FB68     	 ldr r3,[r7,#12]
 274 0078 83F83020 	 strb r2,[r3,#48]
 359:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->input = input;
 275              	 .loc 1 359 0
 276 007c FB68     	 ldr r3,[r7,#12]
 277 007e BA6A     	 ldr r2,[r7,#40]
 278 0080 1A61     	 str r2,[r3,#16]
 360:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 361:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   NETIF_RESET_HINTS(netif);
 362:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS
 363:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->loop_cnt_current = 0;
 364:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS */
 365:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 366:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 367:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_set_addr(netif, ipaddr, netmask, gw);
 279              	 .loc 1 367 0
 280 0082 F868     	 ldr r0,[r7,#12]
 281 0084 B968     	 ldr r1,[r7,#8]
 282 0086 7A68     	 ldr r2,[r7,#4]
 283 0088 3B68     	 ldr r3,[r7]
 284 008a FFF7FEFF 	 bl netif_set_addr
 368:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
 369:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 370:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* call user specified initialization function for netif */
 371:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (init(netif) != ERR_OK) {
 285              	 .loc 1 371 0
 286 008e 7B6A     	 ldr r3,[r7,#36]
 287 0090 F868     	 ldr r0,[r7,#12]
 288 0092 9847     	 blx r3
 289 0094 0346     	 mov r3,r0
 290 0096 002B     	 cmp r3,#0
 291 0098 01D0     	 beq .L14
 372:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return NULL;
 292              	 .loc 1 372 0
 293 009a 0023     	 movs r3,#0
 294 009c 43E0     	 b .L9
 295              	.L14:
 296              	.LBB2:
 373:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 374:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES
 375:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Initialize the MTU for IPv6 to the one set by the netif driver.
 376:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****      This can be updated later by RA. */
 377:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->mtu6 = netif->mtu;
 378:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 && LWIP_ND6_ALLOW_RA_UPDATES */
 379:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 380:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if !LWIP_SINGLE_NETIF
 381:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Assign a unique netif number in the range [0..254], so that (num+1) can
 382:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****      serve as an interface index that fits in a u8_t.
 383:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****      We assume that the new netif has not yet been added to the list here.
 384:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****      This algorithm is O(n^2), but that should be OK for lwIP.
 385:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****      */
 386:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   {
 387:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     struct netif *netif2;
 388:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     int num_netifs;
 389:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     do {
 390:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       if (netif->num == 255) {
 297              	 .loc 1 390 0
 298 009e FB68     	 ldr r3,[r7,#12]
 299 00a0 93F83030 	 ldrb r3,[r3,#48]
 300 00a4 FF2B     	 cmp r3,#255
 301 00a6 03D1     	 bne .L15
 391:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         netif->num = 0;
 302              	 .loc 1 391 0
 303 00a8 FB68     	 ldr r3,[r7,#12]
 304 00aa 0022     	 movs r2,#0
 305 00ac 83F83020 	 strb r2,[r3,#48]
 306              	.L15:
 392:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       }
 393:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       num_netifs = 0;
 307              	 .loc 1 393 0
 308 00b0 0023     	 movs r3,#0
 309 00b2 3B61     	 str r3,[r7,#16]
 394:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       for (netif2 = netif_list; netif2 != NULL; netif2 = netif2->next) {
 310              	 .loc 1 394 0
 311 00b4 214B     	 ldr r3,.L22+12
 312 00b6 1B68     	 ldr r3,[r3]
 313 00b8 7B61     	 str r3,[r7,#20]
 314 00ba 16E0     	 b .L16
 315              	.L19:
 395:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 396:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         num_netifs++;
 316              	 .loc 1 396 0
 317 00bc 3B69     	 ldr r3,[r7,#16]
 318 00be 0133     	 adds r3,r3,#1
 319 00c0 3B61     	 str r3,[r7,#16]
 397:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         LWIP_ASSERT("too many netifs, max. supported number is 255", num_netifs <= 255);
 398:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         if (netif2->num == netif->num) {
 320              	 .loc 1 398 0
 321 00c2 7B69     	 ldr r3,[r7,#20]
 322 00c4 93F83020 	 ldrb r2,[r3,#48]
 323 00c8 FB68     	 ldr r3,[r7,#12]
 324 00ca 93F83030 	 ldrb r3,[r3,#48]
 325 00ce 9A42     	 cmp r2,r3
 326 00d0 08D1     	 bne .L17
 399:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****           netif->num++;
 327              	 .loc 1 399 0
 328 00d2 FB68     	 ldr r3,[r7,#12]
 329 00d4 93F83030 	 ldrb r3,[r3,#48]
 330 00d8 0133     	 adds r3,r3,#1
 331 00da DAB2     	 uxtb r2,r3
 332 00dc FB68     	 ldr r3,[r7,#12]
 333 00de 83F83020 	 strb r2,[r3,#48]
 400:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****           break;
 334              	 .loc 1 400 0
 335 00e2 05E0     	 b .L18
 336              	.L17:
 394:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 337              	 .loc 1 394 0 discriminator 2
 338 00e4 7B69     	 ldr r3,[r7,#20]
 339 00e6 1B68     	 ldr r3,[r3]
 340 00e8 7B61     	 str r3,[r7,#20]
 341              	.L16:
 394:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         LWIP_ASSERT("netif already added", netif2 != netif);
 342              	 .loc 1 394 0 is_stmt 0 discriminator 1
 343 00ea 7B69     	 ldr r3,[r7,#20]
 344 00ec 002B     	 cmp r3,#0
 345 00ee E5D1     	 bne .L19
 346              	.L18:
 401:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         }
 402:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       }
 403:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     } while (netif2 != NULL);
 347              	 .loc 1 403 0 is_stmt 1
 348 00f0 7B69     	 ldr r3,[r7,#20]
 349 00f2 002B     	 cmp r3,#0
 350 00f4 D3D1     	 bne .L14
 351              	.LBE2:
 404:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 405:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif->num == 254) {
 352              	 .loc 1 405 0
 353 00f6 FB68     	 ldr r3,[r7,#12]
 354 00f8 93F83030 	 ldrb r3,[r3,#48]
 355 00fc FE2B     	 cmp r3,#254
 356 00fe 03D1     	 bne .L20
 406:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_num = 0;
 357              	 .loc 1 406 0
 358 0100 0D4B     	 ldr r3,.L22+8
 359 0102 0022     	 movs r2,#0
 360 0104 1A70     	 strb r2,[r3]
 361 0106 06E0     	 b .L21
 362              	.L20:
 407:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   } else {
 408:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_num = (u8_t)(netif->num + 1);
 363              	 .loc 1 408 0
 364 0108 FB68     	 ldr r3,[r7,#12]
 365 010a 93F83030 	 ldrb r3,[r3,#48]
 366 010e 0133     	 adds r3,r3,#1
 367 0110 DAB2     	 uxtb r2,r3
 368 0112 094B     	 ldr r3,.L22+8
 369 0114 1A70     	 strb r2,[r3]
 370              	.L21:
 409:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 410:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 411:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* add this netif to the list */
 412:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->next = netif_list;
 371              	 .loc 1 412 0
 372 0116 094B     	 ldr r3,.L22+12
 373 0118 1A68     	 ldr r2,[r3]
 374 011a FB68     	 ldr r3,[r7,#12]
 375 011c 1A60     	 str r2,[r3]
 413:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_list = netif;
 376              	 .loc 1 413 0
 377 011e 074A     	 ldr r2,.L22+12
 378 0120 FB68     	 ldr r3,[r7,#12]
 379 0122 1360     	 str r3,[r2]
 414:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* "LWIP_SINGLE_NETIF */
 415:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   mib2_netif_added(netif);
 416:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 417:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IGMP
 418:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* start IGMP processing */
 419:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif->flags & NETIF_FLAG_IGMP) {
 420:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     igmp_start(netif);
 421:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 422:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IGMP */
 423:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 424:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: added interface %c%c IP",
 425:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                             netif->name[0], netif->name[1]));
 426:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 427:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" addr "));
 428:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, ipaddr);
 429:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" netmask "));
 430:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, netmask);
 431:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" gw "));
 432:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip4_addr_debug_print(NETIF_DEBUG, gw);
 433:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
 434:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("\n"));
 435:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 436:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_invoke_ext_callback(netif, LWIP_NSC_NETIF_ADDED, NULL);
 437:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 438:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return netif;
 380              	 .loc 1 438 0
 381 0124 FB68     	 ldr r3,[r7,#12]
 382              	.L9:
 439:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 383              	 .loc 1 439 0
 384 0126 1846     	 mov r0,r3
 385 0128 1837     	 adds r7,r7,#24
 386              	.LCFI17:
 387              	 .cfi_def_cfa_offset 8
 388 012a BD46     	 mov sp,r7
 389              	.LCFI18:
 390              	 .cfi_def_cfa_register 13
 391              	 
 392 012c 80BD     	 pop {r7,pc}
 393              	.L23:
 394 012e 00BF     	 .align 2
 395              	.L22:
 396 0130 00000000 	 .word ip_addr_any
 397 0134 00000000 	 .word netif_null_output_ip4
 398 0138 00000000 	 .word netif_num
 399 013c 00000000 	 .word netif_list
 400              	 .cfi_endproc
 401              	.LFE140:
 403              	 .section .text.netif_do_ip_addr_changed,"ax",%progbits
 404              	 .align 2
 405              	 .thumb
 406              	 .thumb_func
 408              	netif_do_ip_addr_changed:
 409              	.LFB141:
 440:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 441:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static void
 442:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_do_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)
 443:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 410              	 .loc 1 443 0
 411              	 .cfi_startproc
 412              	 
 413              	 
 414 0000 80B5     	 push {r7,lr}
 415              	.LCFI19:
 416              	 .cfi_def_cfa_offset 8
 417              	 .cfi_offset 7,-8
 418              	 .cfi_offset 14,-4
 419 0002 82B0     	 sub sp,sp,#8
 420              	.LCFI20:
 421              	 .cfi_def_cfa_offset 16
 422 0004 00AF     	 add r7,sp,#0
 423              	.LCFI21:
 424              	 .cfi_def_cfa_register 7
 425 0006 7860     	 str r0,[r7,#4]
 426 0008 3960     	 str r1,[r7]
 444:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_TCP
 445:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   tcp_netif_ip_addr_changed(old_addr, new_addr);
 427              	 .loc 1 445 0
 428 000a 7868     	 ldr r0,[r7,#4]
 429 000c 3968     	 ldr r1,[r7]
 430 000e FFF7FEFF 	 bl tcp_netif_ip_addr_changed
 446:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_TCP */
 447:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_UDP
 448:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   udp_netif_ip_addr_changed(old_addr, new_addr);
 431              	 .loc 1 448 0
 432 0012 7868     	 ldr r0,[r7,#4]
 433 0014 3968     	 ldr r1,[r7]
 434 0016 FFF7FEFF 	 bl udp_netif_ip_addr_changed
 449:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_UDP */
 450:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_RAW
 451:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   raw_netif_ip_addr_changed(old_addr, new_addr);
 435              	 .loc 1 451 0
 436 001a 7868     	 ldr r0,[r7,#4]
 437 001c 3968     	 ldr r1,[r7]
 438 001e FFF7FEFF 	 bl raw_netif_ip_addr_changed
 452:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_RAW */
 453:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 439              	 .loc 1 453 0
 440 0022 0837     	 adds r7,r7,#8
 441              	.LCFI22:
 442              	 .cfi_def_cfa_offset 8
 443 0024 BD46     	 mov sp,r7
 444              	.LCFI23:
 445              	 .cfi_def_cfa_register 13
 446              	 
 447 0026 80BD     	 pop {r7,pc}
 448              	 .cfi_endproc
 449              	.LFE141:
 451              	 .section .text.netif_do_set_ipaddr,"ax",%progbits
 452              	 .align 2
 453              	 .thumb
 454              	 .thumb_func
 456              	netif_do_set_ipaddr:
 457              	.LFB142:
 454:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 455:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 456:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static int
 457:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_do_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr, ip_addr_t *old_addr)
 458:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 458              	 .loc 1 458 0
 459              	 .cfi_startproc
 460              	 
 461              	 
 462 0000 80B5     	 push {r7,lr}
 463              	.LCFI24:
 464              	 .cfi_def_cfa_offset 8
 465              	 .cfi_offset 7,-8
 466              	 .cfi_offset 14,-4
 467 0002 86B0     	 sub sp,sp,#24
 468              	.LCFI25:
 469              	 .cfi_def_cfa_offset 32
 470 0004 00AF     	 add r7,sp,#0
 471              	.LCFI26:
 472              	 .cfi_def_cfa_register 7
 473 0006 F860     	 str r0,[r7,#12]
 474 0008 B960     	 str r1,[r7,#8]
 475 000a 7A60     	 str r2,[r7,#4]
 459:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("invalid pointer", ipaddr != NULL);
 460:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("invalid pointer", old_addr != NULL);
 461:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 462:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* address is actually being changed? */
 463:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (ip4_addr_cmp(ipaddr, netif_ip4_addr(netif)) == 0) {
 476              	 .loc 1 463 0
 477 000c BB68     	 ldr r3,[r7,#8]
 478 000e 1A68     	 ldr r2,[r3]
 479 0010 FB68     	 ldr r3,[r7,#12]
 480 0012 0433     	 adds r3,r3,#4
 481 0014 1B68     	 ldr r3,[r3]
 482 0016 9A42     	 cmp r2,r3
 483 0018 1CD0     	 beq .L26
 484              	.LBB3:
 464:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_addr_t new_addr;
 465:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     *ip_2_ip4(&new_addr) = *ipaddr;
 485              	 .loc 1 465 0
 486 001a BB68     	 ldr r3,[r7,#8]
 487 001c 1B68     	 ldr r3,[r3]
 488 001e 7B61     	 str r3,[r7,#20]
 466:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     IP_SET_TYPE_VAL(new_addr, IPADDR_TYPE_V4);
 467:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 468:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_addr_copy(*old_addr, *netif_ip_addr4(netif));
 489              	 .loc 1 468 0
 490 0020 FB68     	 ldr r3,[r7,#12]
 491 0022 0433     	 adds r3,r3,#4
 492 0024 1A68     	 ldr r2,[r3]
 493 0026 7B68     	 ldr r3,[r7,#4]
 494 0028 1A60     	 str r2,[r3]
 469:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 470:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_set_ipaddr: netif address being changed\n"));
 471:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_do_ip_addr_changed(old_addr, &new_addr);
 495              	 .loc 1 471 0
 496 002a 07F11403 	 add r3,r7,#20
 497 002e 7868     	 ldr r0,[r7,#4]
 498 0030 1946     	 mov r1,r3
 499 0032 FFF7FEFF 	 bl netif_do_ip_addr_changed
 472:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 473:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mib2_remove_ip4(netif);
 474:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 475:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* set new IP address to netif */
 476:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->ip_addr), ipaddr);
 500              	 .loc 1 476 0
 501 0036 BB68     	 ldr r3,[r7,#8]
 502 0038 002B     	 cmp r3,#0
 503 003a 02D0     	 beq .L27
 504              	 .loc 1 476 0 is_stmt 0 discriminator 1
 505 003c BB68     	 ldr r3,[r7,#8]
 506 003e 1B68     	 ldr r3,[r3]
 507 0040 00E0     	 b .L28
 508              	.L27:
 509              	 .loc 1 476 0 discriminator 2
 510 0042 0023     	 movs r3,#0
 511              	.L28:
 512              	 .loc 1 476 0 discriminator 4
 513 0044 FA68     	 ldr r2,[r7,#12]
 514 0046 5360     	 str r3,[r2,#4]
 477:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     IP_SET_TYPE_VAL(netif->ip_addr, IPADDR_TYPE_V4);
 478:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mib2_add_ip4(netif);
 479:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mib2_add_route_ip4(0, netif);
 480:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 481:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4);
 515              	 .loc 1 481 0 is_stmt 1 discriminator 4
 516 0048 F868     	 ldr r0,[r7,#12]
 517 004a 0121     	 movs r1,#1
 518 004c FFF7FEFF 	 bl netif_issue_reports
 482:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 483:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 484:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return 1; /* address changed */
 519              	 .loc 1 484 0 discriminator 4
 520 0050 0123     	 movs r3,#1
 521 0052 00E0     	 b .L29
 522              	.L26:
 523              	.LBE3:
 485:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 486:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return 0; /* address unchanged */
 524              	 .loc 1 486 0
 525 0054 0023     	 movs r3,#0
 526              	.L29:
 487:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 527              	 .loc 1 487 0 discriminator 1
 528 0056 1846     	 mov r0,r3
 529 0058 1837     	 adds r7,r7,#24
 530              	.LCFI27:
 531              	 .cfi_def_cfa_offset 8
 532 005a BD46     	 mov sp,r7
 533              	.LCFI28:
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 005c 80BD     	 pop {r7,pc}
 537              	 .cfi_endproc
 538              	.LFE142:
 540 005e 00BF     	 .section .text.netif_set_ipaddr,"ax",%progbits
 541              	 .align 2
 542              	 .global netif_set_ipaddr
 543              	 .thumb
 544              	 .thumb_func
 546              	netif_set_ipaddr:
 547              	.LFB143:
 488:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 489:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 490:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_ip4
 491:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Change the IP address of a network interface
 492:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 493:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the network interface to change
 494:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param ipaddr the new IP address
 495:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 496:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @note call netif_set_addr() if you also want to change netmask and
 497:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * default gateway
 498:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 499:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 500:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_ipaddr(struct netif *netif, const ip4_addr_t *ipaddr)
 501:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 548              	 .loc 1 501 0
 549              	 .cfi_startproc
 550              	 
 551              	 
 552 0000 80B5     	 push {r7,lr}
 553              	.LCFI29:
 554              	 .cfi_def_cfa_offset 8
 555              	 .cfi_offset 7,-8
 556              	 .cfi_offset 14,-4
 557 0002 84B0     	 sub sp,sp,#16
 558              	.LCFI30:
 559              	 .cfi_def_cfa_offset 24
 560 0004 00AF     	 add r7,sp,#0
 561              	.LCFI31:
 562              	 .cfi_def_cfa_register 7
 563 0006 7860     	 str r0,[r7,#4]
 564 0008 3960     	 str r1,[r7]
 502:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t old_addr;
 503:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 504:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_set_ipaddr: invalid netif", netif != NULL, return);
 565              	 .loc 1 504 0
 566 000a 7B68     	 ldr r3,[r7,#4]
 567 000c 002B     	 cmp r3,#0
 568 000e 0BD0     	 beq .L30
 505:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 506:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 507:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (ipaddr == NULL) {
 569              	 .loc 1 507 0
 570 0010 3B68     	 ldr r3,[r7]
 571 0012 002B     	 cmp r3,#0
 572 0014 01D1     	 bne .L33
 508:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 573              	 .loc 1 508 0
 574 0016 064B     	 ldr r3,.L34
 575 0018 3B60     	 str r3,[r7]
 576              	.L33:
 509:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 510:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 511:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 512:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 513:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
 577              	 .loc 1 513 0
 578 001a 07F10C03 	 add r3,r7,#12
 579 001e 7868     	 ldr r0,[r7,#4]
 580 0020 3968     	 ldr r1,[r7]
 581 0022 1A46     	 mov r2,r3
 582 0024 FFF7FEFF 	 bl netif_do_set_ipaddr
 583              	.L30:
 514:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 515:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_ext_callback_args_t args;
 516:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     args.ipv4_changed.old_address = &old_addr;
 517:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_ADDRESS_CHANGED, &args);
 518:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 519:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 520:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 584              	 .loc 1 520 0
 585 0028 1037     	 adds r7,r7,#16
 586              	.LCFI32:
 587              	 .cfi_def_cfa_offset 8
 588 002a BD46     	 mov sp,r7
 589              	.LCFI33:
 590              	 .cfi_def_cfa_register 13
 591              	 
 592 002c 80BD     	 pop {r7,pc}
 593              	.L35:
 594 002e 00BF     	 .align 2
 595              	.L34:
 596 0030 00000000 	 .word ip_addr_any
 597              	 .cfi_endproc
 598              	.LFE143:
 600              	 .section .text.netif_do_set_netmask,"ax",%progbits
 601              	 .align 2
 602              	 .thumb
 603              	 .thumb_func
 605              	netif_do_set_netmask:
 606              	.LFB144:
 521:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 522:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static int
 523:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_do_set_netmask(struct netif *netif, const ip4_addr_t *netmask, ip_addr_t *old_nm)
 524:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 607              	 .loc 1 524 0
 608              	 .cfi_startproc
 609              	 
 610              	 
 611              	 
 612 0000 80B4     	 push {r7}
 613              	.LCFI34:
 614              	 .cfi_def_cfa_offset 4
 615              	 .cfi_offset 7,-4
 616 0002 85B0     	 sub sp,sp,#20
 617              	.LCFI35:
 618              	 .cfi_def_cfa_offset 24
 619 0004 00AF     	 add r7,sp,#0
 620              	.LCFI36:
 621              	 .cfi_def_cfa_register 7
 622 0006 F860     	 str r0,[r7,#12]
 623 0008 B960     	 str r1,[r7,#8]
 624 000a 7A60     	 str r2,[r7,#4]
 525:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* address is actually being changed? */
 526:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (ip4_addr_cmp(netmask, netif_ip4_netmask(netif)) == 0) {
 625              	 .loc 1 526 0
 626 000c BB68     	 ldr r3,[r7,#8]
 627 000e 1A68     	 ldr r2,[r3]
 628 0010 FB68     	 ldr r3,[r7,#12]
 629 0012 0833     	 adds r3,r3,#8
 630 0014 1B68     	 ldr r3,[r3]
 631 0016 9A42     	 cmp r2,r3
 632 0018 0AD0     	 beq .L37
 527:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 528:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_ASSERT("invalid pointer", old_nm != NULL);
 529:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_addr_copy(*old_nm, *netif_ip_netmask4(netif));
 530:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else
 531:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_UNUSED_ARG(old_nm);
 532:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 533:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mib2_remove_route_ip4(0, netif);
 534:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* set new netmask to netif */
 535:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->netmask), netmask);
 633              	 .loc 1 535 0
 634 001a BB68     	 ldr r3,[r7,#8]
 635 001c 002B     	 cmp r3,#0
 636 001e 02D0     	 beq .L38
 637              	 .loc 1 535 0 is_stmt 0 discriminator 1
 638 0020 BB68     	 ldr r3,[r7,#8]
 639 0022 1B68     	 ldr r3,[r3]
 640 0024 00E0     	 b .L39
 641              	.L38:
 642              	 .loc 1 535 0 discriminator 2
 643 0026 0023     	 movs r3,#0
 644              	.L39:
 645              	 .loc 1 535 0 discriminator 4
 646 0028 FA68     	 ldr r2,[r7,#12]
 647 002a 9360     	 str r3,[r2,#8]
 536:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     IP_SET_TYPE_VAL(netif->netmask, IPADDR_TYPE_V4);
 537:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mib2_add_route_ip4(0, netif);
 538:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: netmask of interface %c%c s
 539:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 netif->name[0], netif->name[1],
 540:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ip4_addr1_16(netif_ip4_netmask(netif)),
 541:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ip4_addr2_16(netif_ip4_netmask(netif)),
 542:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ip4_addr3_16(netif_ip4_netmask(netif)),
 543:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ip4_addr4_16(netif_ip4_netmask(netif))));
 544:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return 1; /* netmask changed */
 648              	 .loc 1 544 0 is_stmt 1 discriminator 4
 649 002c 0123     	 movs r3,#1
 650 002e 00E0     	 b .L40
 651              	.L37:
 545:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 546:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return 0; /* netmask unchanged */
 652              	 .loc 1 546 0
 653 0030 0023     	 movs r3,#0
 654              	.L40:
 547:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 655              	 .loc 1 547 0
 656 0032 1846     	 mov r0,r3
 657 0034 1437     	 adds r7,r7,#20
 658              	.LCFI37:
 659              	 .cfi_def_cfa_offset 4
 660 0036 BD46     	 mov sp,r7
 661              	.LCFI38:
 662              	 .cfi_def_cfa_register 13
 663              	 
 664 0038 5DF8047B 	 ldr r7,[sp],#4
 665              	.LCFI39:
 666              	 .cfi_restore 7
 667              	 .cfi_def_cfa_offset 0
 668 003c 7047     	 bx lr
 669              	 .cfi_endproc
 670              	.LFE144:
 672 003e 00BF     	 .section .text.netif_set_netmask,"ax",%progbits
 673              	 .align 2
 674              	 .global netif_set_netmask
 675              	 .thumb
 676              	 .thumb_func
 678              	netif_set_netmask:
 679              	.LFB145:
 548:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 549:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 550:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_ip4
 551:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Change the netmask of a network interface
 552:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 553:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the network interface to change
 554:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netmask the new netmask
 555:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 556:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @note call netif_set_addr() if you also want to change ip address and
 557:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * default gateway
 558:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 559:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 560:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_netmask(struct netif *netif, const ip4_addr_t *netmask)
 561:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 680              	 .loc 1 561 0
 681              	 .cfi_startproc
 682              	 
 683              	 
 684 0000 80B5     	 push {r7,lr}
 685              	.LCFI40:
 686              	 .cfi_def_cfa_offset 8
 687              	 .cfi_offset 7,-8
 688              	 .cfi_offset 14,-4
 689 0002 84B0     	 sub sp,sp,#16
 690              	.LCFI41:
 691              	 .cfi_def_cfa_offset 24
 692 0004 00AF     	 add r7,sp,#0
 693              	.LCFI42:
 694              	 .cfi_def_cfa_register 7
 695 0006 7860     	 str r0,[r7,#4]
 696 0008 3960     	 str r1,[r7]
 562:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 563:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t old_nm_val;
 564:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t *old_nm = &old_nm_val;
 565:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else
 566:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t *old_nm = NULL;
 697              	 .loc 1 566 0
 698 000a 0023     	 movs r3,#0
 699 000c FB60     	 str r3,[r7,#12]
 567:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 568:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 569:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 570:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_set_netmask: invalid netif", netif != NULL, return);
 700              	 .loc 1 570 0
 701 000e 7B68     	 ldr r3,[r7,#4]
 702 0010 002B     	 cmp r3,#0
 703 0012 00D1     	 bne .L42
 704 0014 09E0     	 b .L41
 705              	.L42:
 571:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 572:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 573:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netmask == NULL) {
 706              	 .loc 1 573 0
 707 0016 3B68     	 ldr r3,[r7]
 708 0018 002B     	 cmp r3,#0
 709 001a 01D1     	 bne .L44
 574:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 710              	 .loc 1 574 0
 711 001c 044B     	 ldr r3,.L45
 712 001e 3B60     	 str r3,[r7]
 713              	.L44:
 575:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 576:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 577:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_do_set_netmask(netif, netmask, old_nm)) {
 714              	 .loc 1 577 0
 715 0020 7868     	 ldr r0,[r7,#4]
 716 0022 3968     	 ldr r1,[r7]
 717 0024 FA68     	 ldr r2,[r7,#12]
 718 0026 FFF7FEFF 	 bl netif_do_set_netmask
 719              	.L41:
 578:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 579:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_ext_callback_args_t args;
 580:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     args.ipv4_changed.old_netmask = old_nm;
 581:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_NETMASK_CHANGED, &args);
 582:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 583:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 584:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 720              	 .loc 1 584 0
 721 002a 1037     	 adds r7,r7,#16
 722              	.LCFI43:
 723              	 .cfi_def_cfa_offset 8
 724 002c BD46     	 mov sp,r7
 725              	.LCFI44:
 726              	 .cfi_def_cfa_register 13
 727              	 
 728 002e 80BD     	 pop {r7,pc}
 729              	.L46:
 730              	 .align 2
 731              	.L45:
 732 0030 00000000 	 .word ip_addr_any
 733              	 .cfi_endproc
 734              	.LFE145:
 736              	 .section .text.netif_do_set_gw,"ax",%progbits
 737              	 .align 2
 738              	 .thumb
 739              	 .thumb_func
 741              	netif_do_set_gw:
 742              	.LFB146:
 585:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 586:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static int
 587:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_do_set_gw(struct netif *netif, const ip4_addr_t *gw, ip_addr_t *old_gw)
 588:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 743              	 .loc 1 588 0
 744              	 .cfi_startproc
 745              	 
 746              	 
 747              	 
 748 0000 80B4     	 push {r7}
 749              	.LCFI45:
 750              	 .cfi_def_cfa_offset 4
 751              	 .cfi_offset 7,-4
 752 0002 85B0     	 sub sp,sp,#20
 753              	.LCFI46:
 754              	 .cfi_def_cfa_offset 24
 755 0004 00AF     	 add r7,sp,#0
 756              	.LCFI47:
 757              	 .cfi_def_cfa_register 7
 758 0006 F860     	 str r0,[r7,#12]
 759 0008 B960     	 str r1,[r7,#8]
 760 000a 7A60     	 str r2,[r7,#4]
 589:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* address is actually being changed? */
 590:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (ip4_addr_cmp(gw, netif_ip4_gw(netif)) == 0) {
 761              	 .loc 1 590 0
 762 000c BB68     	 ldr r3,[r7,#8]
 763 000e 1A68     	 ldr r2,[r3]
 764 0010 FB68     	 ldr r3,[r7,#12]
 765 0012 0C33     	 adds r3,r3,#12
 766 0014 1B68     	 ldr r3,[r3]
 767 0016 9A42     	 cmp r2,r3
 768 0018 0AD0     	 beq .L48
 591:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 592:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_ASSERT("invalid pointer", old_gw != NULL);
 593:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_addr_copy(*old_gw, *netif_ip_gw4(netif));
 594:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else
 595:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_UNUSED_ARG(old_gw);
 596:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 597:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 598:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip4_addr_set(ip_2_ip4(&netif->gw), gw);
 769              	 .loc 1 598 0
 770 001a BB68     	 ldr r3,[r7,#8]
 771 001c 002B     	 cmp r3,#0
 772 001e 02D0     	 beq .L49
 773              	 .loc 1 598 0 is_stmt 0 discriminator 1
 774 0020 BB68     	 ldr r3,[r7,#8]
 775 0022 1B68     	 ldr r3,[r3]
 776 0024 00E0     	 b .L50
 777              	.L49:
 778              	 .loc 1 598 0 discriminator 2
 779 0026 0023     	 movs r3,#0
 780              	.L50:
 781              	 .loc 1 598 0 discriminator 4
 782 0028 FA68     	 ldr r2,[r7,#12]
 783 002a D360     	 str r3,[r2,#12]
 599:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     IP_SET_TYPE_VAL(netif->gw, IPADDR_TYPE_V4);
 600:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: GW address of interface %c%
 601:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 netif->name[0], netif->name[1],
 602:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ip4_addr1_16(netif_ip4_gw(netif)),
 603:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ip4_addr2_16(netif_ip4_gw(netif)),
 604:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ip4_addr3_16(netif_ip4_gw(netif)),
 605:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ip4_addr4_16(netif_ip4_gw(netif))));
 606:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return 1; /* gateway changed */
 784              	 .loc 1 606 0 is_stmt 1 discriminator 4
 785 002c 0123     	 movs r3,#1
 786 002e 00E0     	 b .L51
 787              	.L48:
 607:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 608:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return 0; /* gateway unchanged */
 788              	 .loc 1 608 0
 789 0030 0023     	 movs r3,#0
 790              	.L51:
 609:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 791              	 .loc 1 609 0
 792 0032 1846     	 mov r0,r3
 793 0034 1437     	 adds r7,r7,#20
 794              	.LCFI48:
 795              	 .cfi_def_cfa_offset 4
 796 0036 BD46     	 mov sp,r7
 797              	.LCFI49:
 798              	 .cfi_def_cfa_register 13
 799              	 
 800 0038 5DF8047B 	 ldr r7,[sp],#4
 801              	.LCFI50:
 802              	 .cfi_restore 7
 803              	 .cfi_def_cfa_offset 0
 804 003c 7047     	 bx lr
 805              	 .cfi_endproc
 806              	.LFE146:
 808 003e 00BF     	 .section .text.netif_set_gw,"ax",%progbits
 809              	 .align 2
 810              	 .global netif_set_gw
 811              	 .thumb
 812              	 .thumb_func
 814              	netif_set_gw:
 815              	.LFB147:
 610:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 611:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 612:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_ip4
 613:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Change the default gateway for a network interface
 614:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 615:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the network interface to change
 616:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param gw the new default gateway
 617:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 618:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @note call netif_set_addr() if you also want to change ip address and netmask
 619:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 620:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 621:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_gw(struct netif *netif, const ip4_addr_t *gw)
 622:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 816              	 .loc 1 622 0
 817              	 .cfi_startproc
 818              	 
 819              	 
 820 0000 80B5     	 push {r7,lr}
 821              	.LCFI51:
 822              	 .cfi_def_cfa_offset 8
 823              	 .cfi_offset 7,-8
 824              	 .cfi_offset 14,-4
 825 0002 84B0     	 sub sp,sp,#16
 826              	.LCFI52:
 827              	 .cfi_def_cfa_offset 24
 828 0004 00AF     	 add r7,sp,#0
 829              	.LCFI53:
 830              	 .cfi_def_cfa_register 7
 831 0006 7860     	 str r0,[r7,#4]
 832 0008 3960     	 str r1,[r7]
 623:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 624:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t old_gw_val;
 625:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t *old_gw = &old_gw_val;
 626:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else
 627:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t *old_gw = NULL;
 833              	 .loc 1 627 0
 834 000a 0023     	 movs r3,#0
 835 000c FB60     	 str r3,[r7,#12]
 628:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 629:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 630:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 631:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_set_gw: invalid netif", netif != NULL, return);
 836              	 .loc 1 631 0
 837 000e 7B68     	 ldr r3,[r7,#4]
 838 0010 002B     	 cmp r3,#0
 839 0012 00D1     	 bne .L53
 840 0014 09E0     	 b .L52
 841              	.L53:
 632:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 633:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 634:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (gw == NULL) {
 842              	 .loc 1 634 0
 843 0016 3B68     	 ldr r3,[r7]
 844 0018 002B     	 cmp r3,#0
 845 001a 01D1     	 bne .L55
 635:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     gw = IP4_ADDR_ANY4;
 846              	 .loc 1 635 0
 847 001c 044B     	 ldr r3,.L56
 848 001e 3B60     	 str r3,[r7]
 849              	.L55:
 636:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 637:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 638:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_do_set_gw(netif, gw, old_gw)) {
 850              	 .loc 1 638 0
 851 0020 7868     	 ldr r0,[r7,#4]
 852 0022 3968     	 ldr r1,[r7]
 853 0024 FA68     	 ldr r2,[r7,#12]
 854 0026 FFF7FEFF 	 bl netif_do_set_gw
 855              	.L52:
 639:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 640:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_ext_callback_args_t args;
 641:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     args.ipv4_changed.old_gw = old_gw;
 642:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_invoke_ext_callback(netif, LWIP_NSC_IPV4_GATEWAY_CHANGED, &args);
 643:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 644:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 645:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 856              	 .loc 1 645 0
 857 002a 1037     	 adds r7,r7,#16
 858              	.LCFI54:
 859              	 .cfi_def_cfa_offset 8
 860 002c BD46     	 mov sp,r7
 861              	.LCFI55:
 862              	 .cfi_def_cfa_register 13
 863              	 
 864 002e 80BD     	 pop {r7,pc}
 865              	.L57:
 866              	 .align 2
 867              	.L56:
 868 0030 00000000 	 .word ip_addr_any
 869              	 .cfi_endproc
 870              	.LFE147:
 872              	 .section .text.netif_set_addr,"ax",%progbits
 873              	 .align 2
 874              	 .global netif_set_addr
 875              	 .thumb
 876              	 .thumb_func
 878              	netif_set_addr:
 879              	.LFB148:
 646:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 647:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 648:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_ip4
 649:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Change IP address configuration for a network interface (including netmask
 650:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * and default gateway).
 651:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 652:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the network interface to change
 653:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param ipaddr the new IP address
 654:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netmask the new netmask
 655:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param gw the new default gateway
 656:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 657:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 658:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_addr(struct netif *netif, const ip4_addr_t *ipaddr, const ip4_addr_t *netmask,
 659:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                const ip4_addr_t *gw)
 660:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 880              	 .loc 1 660 0
 881              	 .cfi_startproc
 882              	 
 883              	 
 884 0000 80B5     	 push {r7,lr}
 885              	.LCFI56:
 886              	 .cfi_def_cfa_offset 8
 887              	 .cfi_offset 7,-8
 888              	 .cfi_offset 14,-4
 889 0002 88B0     	 sub sp,sp,#32
 890              	.LCFI57:
 891              	 .cfi_def_cfa_offset 40
 892 0004 00AF     	 add r7,sp,#0
 893              	.LCFI58:
 894              	 .cfi_def_cfa_register 7
 895 0006 F860     	 str r0,[r7,#12]
 896 0008 B960     	 str r1,[r7,#8]
 897 000a 7A60     	 str r2,[r7,#4]
 898 000c 3B60     	 str r3,[r7]
 661:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 662:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_nsc_reason_t change_reason = LWIP_NSC_NONE;
 663:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_ext_callback_args_t cb_args;
 664:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t old_nm_val;
 665:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t old_gw_val;
 666:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t *old_nm = &old_nm_val;
 667:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t *old_gw = &old_gw_val;
 668:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else
 669:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t *old_nm = NULL;
 899              	 .loc 1 669 0
 900 000e 0023     	 movs r3,#0
 901 0010 FB61     	 str r3,[r7,#28]
 670:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t *old_gw = NULL;
 902              	 .loc 1 670 0
 903 0012 0023     	 movs r3,#0
 904 0014 BB61     	 str r3,[r7,#24]
 671:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 672:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t old_addr;
 673:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   int remove;
 674:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 675:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 676:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 677:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
 678:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (ipaddr == NULL) {
 905              	 .loc 1 678 0
 906 0016 BB68     	 ldr r3,[r7,#8]
 907 0018 002B     	 cmp r3,#0
 908 001a 01D1     	 bne .L59
 679:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ipaddr = IP4_ADDR_ANY4;
 909              	 .loc 1 679 0
 910 001c 1B4B     	 ldr r3,.L67
 911 001e BB60     	 str r3,[r7,#8]
 912              	.L59:
 680:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 681:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netmask == NULL) {
 913              	 .loc 1 681 0
 914 0020 7B68     	 ldr r3,[r7,#4]
 915 0022 002B     	 cmp r3,#0
 916 0024 01D1     	 bne .L60
 682:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netmask = IP4_ADDR_ANY4;
 917              	 .loc 1 682 0
 918 0026 194B     	 ldr r3,.L67
 919 0028 7B60     	 str r3,[r7,#4]
 920              	.L60:
 683:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 684:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (gw == NULL) {
 921              	 .loc 1 684 0
 922 002a 3B68     	 ldr r3,[r7]
 923 002c 002B     	 cmp r3,#0
 924 002e 01D1     	 bne .L61
 685:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     gw = IP4_ADDR_ANY4;
 925              	 .loc 1 685 0
 926 0030 164B     	 ldr r3,.L67
 927 0032 3B60     	 str r3,[r7]
 928              	.L61:
 686:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 687:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 688:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   remove = ip4_addr_isany(ipaddr);
 929              	 .loc 1 688 0
 930 0034 BB68     	 ldr r3,[r7,#8]
 931 0036 002B     	 cmp r3,#0
 932 0038 03D0     	 beq .L62
 933              	 .loc 1 688 0 is_stmt 0 discriminator 2
 934 003a BB68     	 ldr r3,[r7,#8]
 935 003c 1B68     	 ldr r3,[r3]
 936 003e 002B     	 cmp r3,#0
 937 0040 01D1     	 bne .L63
 938              	.L62:
 939              	 .loc 1 688 0 discriminator 3
 940 0042 0123     	 movs r3,#1
 941 0044 00E0     	 b .L64
 942              	.L63:
 943              	 .loc 1 688 0 discriminator 4
 944 0046 0023     	 movs r3,#0
 945              	.L64:
 946              	 .loc 1 688 0 discriminator 6
 947 0048 7B61     	 str r3,[r7,#20]
 689:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (remove) {
 948              	 .loc 1 689 0 is_stmt 1 discriminator 6
 949 004a 7B69     	 ldr r3,[r7,#20]
 950 004c 002B     	 cmp r3,#0
 951 004e 06D0     	 beq .L65
 690:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* when removing an address, we have to remove it *before* changing netmask/gw
 691:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****        to ensure that tcp RST segment can be sent correctly */
 692:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
 952              	 .loc 1 692 0
 953 0050 07F11003 	 add r3,r7,#16
 954 0054 F868     	 ldr r0,[r7,#12]
 955 0056 B968     	 ldr r1,[r7,#8]
 956 0058 1A46     	 mov r2,r3
 957 005a FFF7FEFF 	 bl netif_do_set_ipaddr
 958              	.L65:
 693:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 694:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       change_reason |= LWIP_NSC_IPV4_ADDRESS_CHANGED;
 695:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       cb_args.ipv4_changed.old_address = &old_addr;
 696:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 697:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 698:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 699:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_do_set_netmask(netif, netmask, old_nm)) {
 959              	 .loc 1 699 0
 960 005e F868     	 ldr r0,[r7,#12]
 961 0060 7968     	 ldr r1,[r7,#4]
 962 0062 FA69     	 ldr r2,[r7,#28]
 963 0064 FFF7FEFF 	 bl netif_do_set_netmask
 700:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 701:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_NETMASK_CHANGED;
 702:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     cb_args.ipv4_changed.old_netmask = old_nm;
 703:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 704:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 705:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_do_set_gw(netif, gw, old_gw)) {
 964              	 .loc 1 705 0
 965 0068 F868     	 ldr r0,[r7,#12]
 966 006a 3968     	 ldr r1,[r7]
 967 006c BA69     	 ldr r2,[r7,#24]
 968 006e FFF7FEFF 	 bl netif_do_set_gw
 706:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 707:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_GATEWAY_CHANGED;
 708:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     cb_args.ipv4_changed.old_gw = old_gw;
 709:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 710:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 711:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (!remove) {
 969              	 .loc 1 711 0
 970 0072 7B69     	 ldr r3,[r7,#20]
 971 0074 002B     	 cmp r3,#0
 972 0076 06D1     	 bne .L58
 712:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* set ipaddr last to ensure netmask/gw have been set when status callback is called */
 713:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (netif_do_set_ipaddr(netif, ipaddr, &old_addr)) {
 973              	 .loc 1 713 0
 974 0078 07F11003 	 add r3,r7,#16
 975 007c F868     	 ldr r0,[r7,#12]
 976 007e B968     	 ldr r1,[r7,#8]
 977 0080 1A46     	 mov r2,r3
 978 0082 FFF7FEFF 	 bl netif_do_set_ipaddr
 979              	.L58:
 714:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 715:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       change_reason |= LWIP_NSC_IPV4_ADDRESS_CHANGED;
 716:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       cb_args.ipv4_changed.old_address = &old_addr;
 717:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 718:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 719:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 720:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 721:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 722:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (change_reason != LWIP_NSC_NONE) {
 723:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     change_reason |= LWIP_NSC_IPV4_SETTINGS_CHANGED;
 724:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_invoke_ext_callback(netif, change_reason, &cb_args);
 725:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 726:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 727:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 980              	 .loc 1 727 0
 981 0086 2037     	 adds r7,r7,#32
 982              	.LCFI59:
 983              	 .cfi_def_cfa_offset 8
 984 0088 BD46     	 mov sp,r7
 985              	.LCFI60:
 986              	 .cfi_def_cfa_register 13
 987              	 
 988 008a 80BD     	 pop {r7,pc}
 989              	.L68:
 990              	 .align 2
 991              	.L67:
 992 008c 00000000 	 .word ip_addr_any
 993              	 .cfi_endproc
 994              	.LFE148:
 996              	 .section .text.netif_remove,"ax",%progbits
 997              	 .align 2
 998              	 .global netif_remove
 999              	 .thumb
 1000              	 .thumb_func
 1002              	netif_remove:
 1003              	.LFB149:
 728:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4*/
 729:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 730:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 731:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 732:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Remove a network interface from the list of lwIP netifs.
 733:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 734:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the network interface to remove
 735:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 736:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 737:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_remove(struct netif *netif)
 738:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1004              	 .loc 1 738 0
 1005              	 .cfi_startproc
 1006              	 
 1007              	 
 1008 0000 80B5     	 push {r7,lr}
 1009              	.LCFI61:
 1010              	 .cfi_def_cfa_offset 8
 1011              	 .cfi_offset 7,-8
 1012              	 .cfi_offset 14,-4
 1013 0002 84B0     	 sub sp,sp,#16
 1014              	.LCFI62:
 1015              	 .cfi_def_cfa_offset 24
 1016 0004 00AF     	 add r7,sp,#0
 1017              	.LCFI63:
 1018              	 .cfi_def_cfa_register 7
 1019 0006 7860     	 str r0,[r7,#4]
 739:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 740:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   int i;
 741:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 742:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 743:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 744:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 745:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif == NULL) {
 1020              	 .loc 1 745 0
 1021 0008 7B68     	 ldr r3,[r7,#4]
 1022 000a 002B     	 cmp r3,#0
 1023 000c 00D1     	 bne .L70
 746:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return;
 1024              	 .loc 1 746 0
 1025 000e 3EE0     	 b .L69
 1026              	.L70:
 747:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 748:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 749:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_invoke_ext_callback(netif, LWIP_NSC_NETIF_REMOVED, NULL);
 750:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 751:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 752:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (!ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 1027              	 .loc 1 752 0
 1028 0010 7B68     	 ldr r3,[r7,#4]
 1029 0012 0433     	 adds r3,r3,#4
 1030 0014 1B68     	 ldr r3,[r3]
 1031 0016 002B     	 cmp r3,#0
 1032 0018 05D0     	 beq .L72
 753:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_do_ip_addr_changed(netif_ip_addr4(netif), NULL);
 1033              	 .loc 1 753 0
 1034 001a 7B68     	 ldr r3,[r7,#4]
 1035 001c 0433     	 adds r3,r3,#4
 1036 001e 1846     	 mov r0,r3
 1037 0020 0021     	 movs r1,#0
 1038 0022 FFF7FEFF 	 bl netif_do_ip_addr_changed
 1039              	.L72:
 754:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 755:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 756:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IGMP
 757:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* stop IGMP processing */
 758:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif->flags & NETIF_FLAG_IGMP) {
 759:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     igmp_stop(netif);
 760:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 761:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IGMP */
 762:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4*/
 763:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 764:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 765:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
 766:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, i))) {
 767:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, i), NULL);
 768:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 769:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 770:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_MLD
 771:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* stop MLD processing */
 772:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   mld6_stop(netif);
 773:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_MLD */
 774:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
 775:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_is_up(netif)) {
 1040              	 .loc 1 775 0
 1041 0026 7B68     	 ldr r3,[r7,#4]
 1042 0028 93F82D30 	 ldrb r3,[r3,#45]
 1043 002c 03F00103 	 and r3,r3,#1
 1044 0030 002B     	 cmp r3,#0
 1045 0032 02D0     	 beq .L73
 776:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* set netif down before removing (call callback function) */
 777:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_set_down(netif);
 1046              	 .loc 1 777 0
 1047 0034 7868     	 ldr r0,[r7,#4]
 1048 0036 FFF7FEFF 	 bl netif_set_down
 1049              	.L73:
 778:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 779:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 780:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   mib2_remove_ip4(netif);
 781:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 782:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* this netif is default? */
 783:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_default == netif) {
 1050              	 .loc 1 783 0
 1051 003a 164B     	 ldr r3,.L80
 1052 003c 1A68     	 ldr r2,[r3]
 1053 003e 7B68     	 ldr r3,[r7,#4]
 1054 0040 9A42     	 cmp r2,r3
 1055 0042 02D1     	 bne .L74
 784:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* reset default netif */
 785:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_set_default(NULL);
 1056              	 .loc 1 785 0
 1057 0044 0020     	 movs r0,#0
 1058 0046 FFF7FEFF 	 bl netif_set_default
 1059              	.L74:
 786:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 787:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if !LWIP_SINGLE_NETIF
 788:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /*  is it the first netif? */
 789:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif_list == netif) {
 1060              	 .loc 1 789 0
 1061 004a 134B     	 ldr r3,.L80+4
 1062 004c 1A68     	 ldr r2,[r3]
 1063 004e 7B68     	 ldr r3,[r7,#4]
 1064 0050 9A42     	 cmp r2,r3
 1065 0052 04D1     	 bne .L75
 790:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_list = netif->next;
 1066              	 .loc 1 790 0
 1067 0054 7B68     	 ldr r3,[r7,#4]
 1068 0056 1B68     	 ldr r3,[r3]
 1069 0058 0F4A     	 ldr r2,.L80+4
 1070 005a 1360     	 str r3,[r2]
 1071 005c 17E0     	 b .L69
 1072              	.L75:
 1073              	.LBB4:
 791:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   } else {
 792:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /*  look for netif further down the list */
 793:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     struct netif *tmp_netif;
 794:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_FOREACH(tmp_netif) {
 1074              	 .loc 1 794 0
 1075 005e 0E4B     	 ldr r3,.L80+4
 1076 0060 1B68     	 ldr r3,[r3]
 1077 0062 FB60     	 str r3,[r7,#12]
 1078 0064 0CE0     	 b .L76
 1079              	.L79:
 795:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       if (tmp_netif->next == netif) {
 1080              	 .loc 1 795 0
 1081 0066 FB68     	 ldr r3,[r7,#12]
 1082 0068 1A68     	 ldr r2,[r3]
 1083 006a 7B68     	 ldr r3,[r7,#4]
 1084 006c 9A42     	 cmp r2,r3
 1085 006e 04D1     	 bne .L77
 796:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         tmp_netif->next = netif->next;
 1086              	 .loc 1 796 0
 1087 0070 7B68     	 ldr r3,[r7,#4]
 1088 0072 1A68     	 ldr r2,[r3]
 1089 0074 FB68     	 ldr r3,[r7,#12]
 1090 0076 1A60     	 str r2,[r3]
 797:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         break;
 1091              	 .loc 1 797 0
 1092 0078 05E0     	 b .L78
 1093              	.L77:
 794:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       if (tmp_netif->next == netif) {
 1094              	 .loc 1 794 0 discriminator 2
 1095 007a FB68     	 ldr r3,[r7,#12]
 1096 007c 1B68     	 ldr r3,[r3]
 1097 007e FB60     	 str r3,[r7,#12]
 1098              	.L76:
 794:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       if (tmp_netif->next == netif) {
 1099              	 .loc 1 794 0 is_stmt 0 discriminator 1
 1100 0080 FB68     	 ldr r3,[r7,#12]
 1101 0082 002B     	 cmp r3,#0
 1102 0084 EFD1     	 bne .L79
 1103              	.L78:
 798:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       }
 799:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 800:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (tmp_netif == NULL) {
 1104              	 .loc 1 800 0 is_stmt 1
 1105 0086 FB68     	 ldr r3,[r7,#12]
 1106 0088 002B     	 cmp r3,#0
 1107 008a 00D1     	 bne .L69
 801:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       return; /* netif is not on the list */
 1108              	 .loc 1 801 0 discriminator 2
 1109 008c 00BF     	 nop
 1110              	.L69:
 1111              	.LBE4:
 802:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 803:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 804:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* !LWIP_SINGLE_NETIF */
 805:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   mib2_netif_removed(netif);
 806:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 807:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif->remove_callback) {
 808:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->remove_callback(netif);
 809:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 810:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_REMOVE_CALLBACK */
 811:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF( NETIF_DEBUG, ("netif_remove: removed netif\n") );
 812:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1112              	 .loc 1 812 0
 1113 008e 1037     	 adds r7,r7,#16
 1114              	.LCFI64:
 1115              	 .cfi_def_cfa_offset 8
 1116 0090 BD46     	 mov sp,r7
 1117              	.LCFI65:
 1118              	 .cfi_def_cfa_register 13
 1119              	 
 1120 0092 80BD     	 pop {r7,pc}
 1121              	.L81:
 1122              	 .align 2
 1123              	.L80:
 1124 0094 00000000 	 .word netif_default
 1125 0098 00000000 	 .word netif_list
 1126              	 .cfi_endproc
 1127              	.LFE149:
 1129              	 .section .text.netif_set_default,"ax",%progbits
 1130              	 .align 2
 1131              	 .global netif_set_default
 1132              	 .thumb
 1133              	 .thumb_func
 1135              	netif_set_default:
 1136              	.LFB150:
 813:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 814:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 815:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 816:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Set a network interface as the default network interface
 817:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * (used to output all packets for which no specific route is found)
 818:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
 819:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the default network interface
 820:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 821:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 822:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_default(struct netif *netif)
 823:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1137              	 .loc 1 823 0
 1138              	 .cfi_startproc
 1139              	 
 1140              	 
 1141              	 
 1142 0000 80B4     	 push {r7}
 1143              	.LCFI66:
 1144              	 .cfi_def_cfa_offset 4
 1145              	 .cfi_offset 7,-4
 1146 0002 83B0     	 sub sp,sp,#12
 1147              	.LCFI67:
 1148              	 .cfi_def_cfa_offset 16
 1149 0004 00AF     	 add r7,sp,#0
 1150              	.LCFI68:
 1151              	 .cfi_def_cfa_register 7
 1152 0006 7860     	 str r0,[r7,#4]
 824:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 825:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 826:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif == NULL) {
 827:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* remove default route */
 828:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mib2_remove_route_ip4(1, netif);
 829:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   } else {
 830:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* install default route */
 831:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mib2_add_route_ip4(1, netif);
 832:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 833:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_default = netif;
 1153              	 .loc 1 833 0
 1154 0008 034A     	 ldr r2,.L83
 1155 000a 7B68     	 ldr r3,[r7,#4]
 1156 000c 1360     	 str r3,[r2]
 834:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 835:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                             netif ? netif->name[0] : '\'', netif ? netif->name[1] : '\''));
 836:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1157              	 .loc 1 836 0
 1158 000e 0C37     	 adds r7,r7,#12
 1159              	.LCFI69:
 1160              	 .cfi_def_cfa_offset 4
 1161 0010 BD46     	 mov sp,r7
 1162              	.LCFI70:
 1163              	 .cfi_def_cfa_register 13
 1164              	 
 1165 0012 5DF8047B 	 ldr r7,[sp],#4
 1166              	.LCFI71:
 1167              	 .cfi_restore 7
 1168              	 .cfi_def_cfa_offset 0
 1169 0016 7047     	 bx lr
 1170              	.L84:
 1171              	 .align 2
 1172              	.L83:
 1173 0018 00000000 	 .word netif_default
 1174              	 .cfi_endproc
 1175              	.LFE150:
 1177              	 .section .text.netif_set_up,"ax",%progbits
 1178              	 .align 2
 1179              	 .global netif_set_up
 1180              	 .thumb
 1181              	 .thumb_func
 1183              	netif_set_up:
 1184              	.LFB151:
 837:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 838:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 839:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 840:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Bring an interface up, available for processing
 841:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * traffic.
 842:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 843:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 844:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_up(struct netif *netif)
 845:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1185              	 .loc 1 845 0
 1186              	 .cfi_startproc
 1187              	 
 1188              	 
 1189 0000 80B5     	 push {r7,lr}
 1190              	.LCFI72:
 1191              	 .cfi_def_cfa_offset 8
 1192              	 .cfi_offset 7,-8
 1193              	 .cfi_offset 14,-4
 1194 0002 82B0     	 sub sp,sp,#8
 1195              	.LCFI73:
 1196              	 .cfi_def_cfa_offset 16
 1197 0004 00AF     	 add r7,sp,#0
 1198              	.LCFI74:
 1199              	 .cfi_def_cfa_register 7
 1200 0006 7860     	 str r0,[r7,#4]
 846:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 847:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 848:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_set_up: invalid netif", netif != NULL, return);
 1201              	 .loc 1 848 0
 1202 0008 7B68     	 ldr r3,[r7,#4]
 1203 000a 002B     	 cmp r3,#0
 1204 000c 00D1     	 bne .L86
 1205 000e 13E0     	 b .L85
 1206              	.L86:
 849:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 850:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_UP)) {
 1207              	 .loc 1 850 0
 1208 0010 7B68     	 ldr r3,[r7,#4]
 1209 0012 93F82D30 	 ldrb r3,[r3,#45]
 1210 0016 03F00103 	 and r3,r3,#1
 1211 001a 002B     	 cmp r3,#0
 1212 001c 0CD1     	 bne .L85
 851:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_UP);
 1213              	 .loc 1 851 0
 1214 001e 7B68     	 ldr r3,[r7,#4]
 1215 0020 93F82D30 	 ldrb r3,[r3,#45]
 1216 0024 43F00103 	 orr r3,r3,#1
 1217 0028 DAB2     	 uxtb r2,r3
 1218 002a 7B68     	 ldr r3,[r7,#4]
 1219 002c 83F82D20 	 strb r2,[r3,#45]
 852:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 853:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 854:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 855:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 856:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 857:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 858:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     {
 859:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_ext_callback_args_t args;
 860:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.status_changed.state = 1;
 861:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_STATUS_CHANGED, &args);
 862:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 863:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 864:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 865:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
 1220              	 .loc 1 865 0
 1221 0030 7868     	 ldr r0,[r7,#4]
 1222 0032 0321     	 movs r1,#3
 1223 0034 FFF7FEFF 	 bl netif_issue_reports
 1224              	.L85:
 866:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 867:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     nd6_restart_netif(netif);
 868:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
 869:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 870:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1225              	 .loc 1 870 0
 1226 0038 0837     	 adds r7,r7,#8
 1227              	.LCFI75:
 1228              	 .cfi_def_cfa_offset 8
 1229 003a BD46     	 mov sp,r7
 1230              	.LCFI76:
 1231              	 .cfi_def_cfa_register 13
 1232              	 
 1233 003c 80BD     	 pop {r7,pc}
 1234              	 .cfi_endproc
 1235              	.LFE151:
 1237 003e 00BF     	 .section .text.netif_issue_reports,"ax",%progbits
 1238              	 .align 2
 1239              	 .thumb
 1240              	 .thumb_func
 1242              	netif_issue_reports:
 1243              	.LFB152:
 871:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 872:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /** Send ARP/IGMP/MLD/RS events, e.g. on link-up/netif-up or addr-change
 873:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 874:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static void
 875:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_issue_reports(struct netif *netif, u8_t report_type)
 876:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1244              	 .loc 1 876 0
 1245              	 .cfi_startproc
 1246              	 
 1247              	 
 1248 0000 80B5     	 push {r7,lr}
 1249              	.LCFI77:
 1250              	 .cfi_def_cfa_offset 8
 1251              	 .cfi_offset 7,-8
 1252              	 .cfi_offset 14,-4
 1253 0002 82B0     	 sub sp,sp,#8
 1254              	.LCFI78:
 1255              	 .cfi_def_cfa_offset 16
 1256 0004 00AF     	 add r7,sp,#0
 1257              	.LCFI79:
 1258              	 .cfi_def_cfa_register 7
 1259 0006 7860     	 str r0,[r7,#4]
 1260 0008 0B46     	 mov r3,r1
 1261 000a FB70     	 strb r3,[r7,#3]
 877:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_issue_reports: invalid netif", netif != NULL);
 878:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 879:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Only send reports when both link and admin states are up */
 880:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_LINK_UP) ||
 1262              	 .loc 1 880 0
 1263 000c 7B68     	 ldr r3,[r7,#4]
 1264 000e 93F82D30 	 ldrb r3,[r3,#45]
 1265 0012 03F00403 	 and r3,r3,#4
 1266 0016 002B     	 cmp r3,#0
 1267 0018 06D0     	 beq .L89
 881:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1268              	 .loc 1 881 0 discriminator 1
 1269 001a 7B68     	 ldr r3,[r7,#4]
 1270 001c 93F82D30 	 ldrb r3,[r3,#45]
 1271 0020 03F00103 	 and r3,r3,#1
 880:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       !(netif->flags & NETIF_FLAG_UP)) {
 1272              	 .loc 1 880 0 discriminator 1
 1273 0024 002B     	 cmp r3,#0
 1274 0026 00D1     	 bne .L90
 1275              	.L89:
 882:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return;
 1276              	 .loc 1 882 0
 1277 0028 16E0     	 b .L88
 1278              	.L90:
 883:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 884:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 885:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
 886:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if ((report_type & NETIF_REPORT_TYPE_IPV4) &&
 1279              	 .loc 1 886 0
 1280 002a FB78     	 ldrb r3,[r7,#3]
 1281 002c 03F00103 	 and r3,r3,#1
 1282 0030 002B     	 cmp r3,#0
 1283 0032 11D0     	 beq .L88
 887:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 1284              	 .loc 1 887 0 discriminator 1
 1285 0034 7B68     	 ldr r3,[r7,#4]
 1286 0036 0433     	 adds r3,r3,#4
 1287 0038 1B68     	 ldr r3,[r3]
 886:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       !ip4_addr_isany_val(*netif_ip4_addr(netif))) {
 1288              	 .loc 1 886 0 discriminator 1
 1289 003a 002B     	 cmp r3,#0
 1290 003c 0CD0     	 beq .L88
 888:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_ARP
 889:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* For Ethernet network interfaces, we would like to send a "gratuitous ARP" */
 890:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (netif->flags & (NETIF_FLAG_ETHARP)) {
 1291              	 .loc 1 890 0
 1292 003e 7B68     	 ldr r3,[r7,#4]
 1293 0040 93F82D30 	 ldrb r3,[r3,#45]
 1294 0044 03F00803 	 and r3,r3,#8
 1295 0048 002B     	 cmp r3,#0
 1296 004a 05D0     	 beq .L88
 891:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       etharp_gratuitous(netif);
 1297              	 .loc 1 891 0
 1298 004c 7B68     	 ldr r3,[r7,#4]
 1299 004e 0433     	 adds r3,r3,#4
 1300 0050 7868     	 ldr r0,[r7,#4]
 1301 0052 1946     	 mov r1,r3
 1302 0054 FFF7FEFF 	 bl etharp_request
 1303              	.L88:
 892:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 893:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_ARP */
 894:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 895:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IGMP
 896:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* resend IGMP memberships */
 897:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (netif->flags & NETIF_FLAG_IGMP) {
 898:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       igmp_report_groups(netif);
 899:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 900:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IGMP */
 901:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 902:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
 903:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 904:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 905:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (report_type & NETIF_REPORT_TYPE_IPV6) {
 906:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_MLD
 907:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* send mld memberships */
 908:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     mld6_report_groups(netif);
 909:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_MLD */
 910:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 911:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
 912:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1304              	 .loc 1 912 0
 1305 0058 0837     	 adds r7,r7,#8
 1306              	.LCFI80:
 1307              	 .cfi_def_cfa_offset 8
 1308 005a BD46     	 mov sp,r7
 1309              	.LCFI81:
 1310              	 .cfi_def_cfa_register 13
 1311              	 
 1312 005c 80BD     	 pop {r7,pc}
 1313              	 .cfi_endproc
 1314              	.LFE152:
 1316 005e 00BF     	 .section .text.netif_set_down,"ax",%progbits
 1317              	 .align 2
 1318              	 .global netif_set_down
 1319              	 .thumb
 1320              	 .thumb_func
 1322              	netif_set_down:
 1323              	.LFB153:
 913:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 914:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 915:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 916:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Bring an interface down, disabling any traffic processing.
 917:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 918:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 919:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_down(struct netif *netif)
 920:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1324              	 .loc 1 920 0
 1325              	 .cfi_startproc
 1326              	 
 1327              	 
 1328 0000 80B5     	 push {r7,lr}
 1329              	.LCFI82:
 1330              	 .cfi_def_cfa_offset 8
 1331              	 .cfi_offset 7,-8
 1332              	 .cfi_offset 14,-4
 1333 0002 82B0     	 sub sp,sp,#8
 1334              	.LCFI83:
 1335              	 .cfi_def_cfa_offset 16
 1336 0004 00AF     	 add r7,sp,#0
 1337              	.LCFI84:
 1338              	 .cfi_def_cfa_register 7
 1339 0006 7860     	 str r0,[r7,#4]
 921:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 922:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 923:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_set_down: invalid netif", netif != NULL, return);
 1340              	 .loc 1 923 0
 1341 0008 7B68     	 ldr r3,[r7,#4]
 1342 000a 002B     	 cmp r3,#0
 1343 000c 00D1     	 bne .L93
 1344 000e 19E0     	 b .L92
 1345              	.L93:
 924:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 925:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif->flags & NETIF_FLAG_UP) {
 1346              	 .loc 1 925 0
 1347 0010 7B68     	 ldr r3,[r7,#4]
 1348 0012 93F82D30 	 ldrb r3,[r3,#45]
 1349 0016 03F00103 	 and r3,r3,#1
 1350 001a 002B     	 cmp r3,#0
 1351 001c 12D0     	 beq .L92
 926:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
 927:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     {
 928:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_ext_callback_args_t args;
 929:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.status_changed.state = 0;
 930:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_STATUS_CHANGED, &args);
 931:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 932:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
 933:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 934:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_UP);
 1352              	 .loc 1 934 0
 1353 001e 7B68     	 ldr r3,[r7,#4]
 1354 0020 93F82D30 	 ldrb r3,[r3,#45]
 1355 0024 23F00103 	 bic r3,r3,#1
 1356 0028 DAB2     	 uxtb r2,r3
 1357 002a 7B68     	 ldr r3,[r7,#4]
 1358 002c 83F82D20 	 strb r2,[r3,#45]
 935:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     MIB2_COPY_SYSUPTIME_TO(&netif->ts);
 936:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 937:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4 && LWIP_ARP
 938:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (netif->flags & NETIF_FLAG_ETHARP) {
 1359              	 .loc 1 938 0
 1360 0030 7B68     	 ldr r3,[r7,#4]
 1361 0032 93F82D30 	 ldrb r3,[r3,#45]
 1362 0036 03F00803 	 and r3,r3,#8
 1363 003a 002B     	 cmp r3,#0
 1364 003c 02D0     	 beq .L92
 939:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       etharp_cleanup_netif(netif);
 1365              	 .loc 1 939 0
 1366 003e 7868     	 ldr r0,[r7,#4]
 1367 0040 FFF7FEFF 	 bl etharp_cleanup_netif
 1368              	.L92:
 940:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
 941:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 && LWIP_ARP */
 942:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 943:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
 944:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     nd6_cleanup_netif(netif);
 945:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
 946:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 947:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 948:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 949:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1369              	 .loc 1 949 0
 1370 0044 0837     	 adds r7,r7,#8
 1371              	.LCFI85:
 1372              	 .cfi_def_cfa_offset 8
 1373 0046 BD46     	 mov sp,r7
 1374              	.LCFI86:
 1375              	 .cfi_def_cfa_register 13
 1376              	 
 1377 0048 80BD     	 pop {r7,pc}
 1378              	 .cfi_endproc
 1379              	.LFE153:
 1381 004a 00BF     	 .section .text.netif_set_link_up,"ax",%progbits
 1382              	 .align 2
 1383              	 .global netif_set_link_up
 1384              	 .thumb
 1385              	 .thumb_func
 1387              	netif_set_link_up:
 1388              	.LFB154:
 950:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 951:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
 952:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 953:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 954:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Set callback to be called when interface is brought up/down or address is changed while up
 955:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 956:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 957:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_status_callback(struct netif *netif, netif_status_callback_fn status_callback)
 958:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 959:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 960:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 961:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif) {
 962:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->status_callback = status_callback;
 963:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 964:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 965:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
 966:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 967:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 968:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 969:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 970:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Set callback to be called when the interface has been removed
 971:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 972:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 973:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_remove_callback(struct netif *netif, netif_status_callback_fn remove_callback)
 974:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 975:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 976:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 977:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif) {
 978:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->remove_callback = remove_callback;
 979:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
 980:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 981:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_REMOVE_CALLBACK */
 982:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 983:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
 984:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
 985:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Called by a driver when its link goes up
 986:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
 987:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
 988:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_link_up(struct netif *netif)
 989:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1389              	 .loc 1 989 0
 1390              	 .cfi_startproc
 1391              	 
 1392              	 
 1393 0000 80B5     	 push {r7,lr}
 1394              	.LCFI87:
 1395              	 .cfi_def_cfa_offset 8
 1396              	 .cfi_offset 7,-8
 1397              	 .cfi_offset 14,-4
 1398 0002 82B0     	 sub sp,sp,#8
 1399              	.LCFI88:
 1400              	 .cfi_def_cfa_offset 16
 1401 0004 00AF     	 add r7,sp,#0
 1402              	.LCFI89:
 1403              	 .cfi_def_cfa_register 7
 1404 0006 7860     	 str r0,[r7,#4]
 990:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
 991:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 992:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_set_link_up: invalid netif", netif != NULL, return);
 1405              	 .loc 1 992 0
 1406 0008 7B68     	 ldr r3,[r7,#4]
 1407 000a 002B     	 cmp r3,#0
 1408 000c 00D1     	 bne .L96
 1409 000e 1BE0     	 b .L95
 1410              	.L96:
 993:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 994:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_LINK_UP)) {
 1411              	 .loc 1 994 0
 1412 0010 7B68     	 ldr r3,[r7,#4]
 1413 0012 93F82D30 	 ldrb r3,[r3,#45]
 1414 0016 03F00403 	 and r3,r3,#4
 1415 001a 002B     	 cmp r3,#0
 1416 001c 14D1     	 bne .L95
 995:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_set_flags(netif, NETIF_FLAG_LINK_UP);
 1417              	 .loc 1 995 0
 1418 001e 7B68     	 ldr r3,[r7,#4]
 1419 0020 93F82D30 	 ldrb r3,[r3,#45]
 1420 0024 43F00403 	 orr r3,r3,#4
 1421 0028 DAB2     	 uxtb r2,r3
 1422 002a 7B68     	 ldr r3,[r7,#4]
 1423 002c 83F82D20 	 strb r2,[r3,#45]
 996:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
 997:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_DHCP
 998:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     dhcp_network_changed(netif);
 999:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_DHCP */
1000:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1001:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_AUTOIP
1002:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     autoip_network_changed(netif);
1003:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_AUTOIP */
1004:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1005:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV4 | NETIF_REPORT_TYPE_IPV6);
 1424              	 .loc 1 1005 0
 1425 0030 7868     	 ldr r0,[r7,#4]
 1426 0032 0321     	 movs r1,#3
 1427 0034 FFF7FEFF 	 bl netif_issue_reports
1006:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
1007:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     nd6_restart_netif(netif);
1008:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
1009:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1010:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
 1428              	 .loc 1 1010 0
 1429 0038 7B68     	 ldr r3,[r7,#4]
 1430 003a DB69     	 ldr r3,[r3,#28]
 1431 003c 002B     	 cmp r3,#0
 1432 003e 03D0     	 beq .L95
 1433              	 .loc 1 1010 0 is_stmt 0 discriminator 1
 1434 0040 7B68     	 ldr r3,[r7,#4]
 1435 0042 DB69     	 ldr r3,[r3,#28]
 1436 0044 7868     	 ldr r0,[r7,#4]
 1437 0046 9847     	 blx r3
 1438              	.L95:
1011:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1012:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     {
1013:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_ext_callback_args_t args;
1014:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.link_changed.state = 1;
1015:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_LINK_CHANGED, &args);
1016:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1017:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
1018:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1019:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1439              	 .loc 1 1019 0 is_stmt 1
 1440 0048 0837     	 adds r7,r7,#8
 1441              	.LCFI90:
 1442              	 .cfi_def_cfa_offset 8
 1443 004a BD46     	 mov sp,r7
 1444              	.LCFI91:
 1445              	 .cfi_def_cfa_register 13
 1446              	 
 1447 004c 80BD     	 pop {r7,pc}
 1448              	 .cfi_endproc
 1449              	.LFE154:
 1451 004e 00BF     	 .section .text.netif_set_link_down,"ax",%progbits
 1452              	 .align 2
 1453              	 .global netif_set_link_down
 1454              	 .thumb
 1455              	 .thumb_func
 1457              	netif_set_link_down:
 1458              	.LFB155:
1020:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1021:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1022:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
1023:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Called by a driver when its link goes down
1024:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1025:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
1026:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_link_down(struct netif *netif)
1027:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1459              	 .loc 1 1027 0
 1460              	 .cfi_startproc
 1461              	 
 1462              	 
 1463 0000 80B5     	 push {r7,lr}
 1464              	.LCFI92:
 1465              	 .cfi_def_cfa_offset 8
 1466              	 .cfi_offset 7,-8
 1467              	 .cfi_offset 14,-4
 1468 0002 82B0     	 sub sp,sp,#8
 1469              	.LCFI93:
 1470              	 .cfi_def_cfa_offset 16
 1471 0004 00AF     	 add r7,sp,#0
 1472              	.LCFI94:
 1473              	 .cfi_def_cfa_register 7
 1474 0006 7860     	 str r0,[r7,#4]
1028:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1029:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1030:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ERROR("netif_set_link_down: invalid netif", netif != NULL, return);
 1475              	 .loc 1 1030 0
 1476 0008 7B68     	 ldr r3,[r7,#4]
 1477 000a 002B     	 cmp r3,#0
 1478 000c 00D1     	 bne .L99
 1479 000e 17E0     	 b .L98
 1480              	.L99:
1031:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1032:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif->flags & NETIF_FLAG_LINK_UP) {
 1481              	 .loc 1 1032 0
 1482 0010 7B68     	 ldr r3,[r7,#4]
 1483 0012 93F82D30 	 ldrb r3,[r3,#45]
 1484 0016 03F00403 	 and r3,r3,#4
 1485 001a 002B     	 cmp r3,#0
 1486 001c 10D0     	 beq .L98
1033:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_clear_flags(netif, NETIF_FLAG_LINK_UP);
 1487              	 .loc 1 1033 0
 1488 001e 7B68     	 ldr r3,[r7,#4]
 1489 0020 93F82D30 	 ldrb r3,[r3,#45]
 1490 0024 23F00403 	 bic r3,r3,#4
 1491 0028 DAB2     	 uxtb r2,r3
 1492 002a 7B68     	 ldr r3,[r7,#4]
 1493 002c 83F82D20 	 strb r2,[r3,#45]
1034:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
 1494              	 .loc 1 1034 0
 1495 0030 7B68     	 ldr r3,[r7,#4]
 1496 0032 DB69     	 ldr r3,[r3,#28]
 1497 0034 002B     	 cmp r3,#0
 1498 0036 03D0     	 beq .L98
 1499              	 .loc 1 1034 0 is_stmt 0 discriminator 1
 1500 0038 7B68     	 ldr r3,[r7,#4]
 1501 003a DB69     	 ldr r3,[r3,#28]
 1502 003c 7868     	 ldr r0,[r7,#4]
 1503 003e 9847     	 blx r3
 1504              	.L98:
1035:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1036:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     {
1037:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_ext_callback_args_t args;
1038:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.link_changed.state = 0;
1039:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_LINK_CHANGED, &args);
1040:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1041:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
1042:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1043:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1505              	 .loc 1 1043 0 is_stmt 1
 1506 0040 0837     	 adds r7,r7,#8
 1507              	.LCFI95:
 1508              	 .cfi_def_cfa_offset 8
 1509 0042 BD46     	 mov sp,r7
 1510              	.LCFI96:
 1511              	 .cfi_def_cfa_register 13
 1512              	 
 1513 0044 80BD     	 pop {r7,pc}
 1514              	 .cfi_endproc
 1515              	.LFE155:
 1517 0046 00BF     	 .section .text.netif_set_link_callback,"ax",%progbits
 1518              	 .align 2
 1519              	 .global netif_set_link_callback
 1520              	 .thumb
 1521              	 .thumb_func
 1523              	netif_set_link_callback:
 1524              	.LFB156:
1044:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1045:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
1046:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1047:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
1048:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Set callback to be called when link is brought up/down
1049:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1050:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
1051:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_set_link_callback(struct netif *netif, netif_status_callback_fn link_callback)
1052:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1525              	 .loc 1 1052 0
 1526              	 .cfi_startproc
 1527              	 
 1528              	 
 1529              	 
 1530 0000 80B4     	 push {r7}
 1531              	.LCFI97:
 1532              	 .cfi_def_cfa_offset 4
 1533              	 .cfi_offset 7,-4
 1534 0002 83B0     	 sub sp,sp,#12
 1535              	.LCFI98:
 1536              	 .cfi_def_cfa_offset 16
 1537 0004 00AF     	 add r7,sp,#0
 1538              	.LCFI99:
 1539              	 .cfi_def_cfa_register 7
 1540 0006 7860     	 str r0,[r7,#4]
 1541 0008 3960     	 str r1,[r7]
1053:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1054:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1055:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif) {
 1542              	 .loc 1 1055 0
 1543 000a 7B68     	 ldr r3,[r7,#4]
 1544 000c 002B     	 cmp r3,#0
 1545 000e 02D0     	 beq .L101
1056:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->link_callback = link_callback;
 1546              	 .loc 1 1056 0
 1547 0010 7B68     	 ldr r3,[r7,#4]
 1548 0012 3A68     	 ldr r2,[r7]
 1549 0014 DA61     	 str r2,[r3,#28]
 1550              	.L101:
1057:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1058:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1551              	 .loc 1 1058 0
 1552 0016 0C37     	 adds r7,r7,#12
 1553              	.LCFI100:
 1554              	 .cfi_def_cfa_offset 4
 1555 0018 BD46     	 mov sp,r7
 1556              	.LCFI101:
 1557              	 .cfi_def_cfa_register 13
 1558              	 
 1559 001a 5DF8047B 	 ldr r7,[sp],#4
 1560              	.LCFI102:
 1561              	 .cfi_restore 7
 1562              	 .cfi_def_cfa_offset 0
 1563 001e 7047     	 bx lr
 1564              	 .cfi_endproc
 1565              	.LFE156:
 1567              	 .section .text.netif_null_output_ip4,"ax",%progbits
 1568              	 .align 2
 1569              	 .thumb
 1570              	 .thumb_func
 1572              	netif_null_output_ip4:
 1573              	.LFB157:
1059:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
1060:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1061:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if ENABLE_LOOPBACK
1062:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1063:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
1064:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Send an IP packet to be received on the same netif (loopif-like).
1065:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * The pbuf is simply copied and handed back to netif->input.
1066:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * In multithreaded mode, this is done directly since netif->input must put
1067:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * the packet on a queue.
1068:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * In callback mode, the packet is put on an internal queue and is fed to
1069:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * netif->input by netif_poll().
1070:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1071:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the lwip network interface structure
1072:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param p the (IP) packet to 'send'
1073:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @return ERR_OK if the packet has been sent
1074:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *         ERR_MEM if the pbuf used to copy the packet couldn't be allocated
1075:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1076:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** err_t
1077:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_loop_output(struct netif *netif, struct pbuf *p)
1078:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1079:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct pbuf *r;
1080:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   err_t err;
1081:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct pbuf *last;
1082:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1083:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   u16_t clen = 0;
1084:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1085:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* If we have a loopif, SNMP counters are adjusted for it,
1086:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    * if not they are adjusted for 'netif'. */
1087:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if MIB2_STATS
1088:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_HAVE_LOOPIF
1089:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *stats_if = &loop_netif;
1090:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else /* LWIP_HAVE_LOOPIF */
1091:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *stats_if = netif;
1092:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1093:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* MIB2_STATS */
1094:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1095:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   u8_t schedule_poll = 0;
1096:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1097:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   SYS_ARCH_DECL_PROTECT(lev);
1098:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1099:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_loop_output: invalid netif", netif != NULL);
1100:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_loop_output: invalid pbuf", p != NULL);
1101:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1102:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Allocate a new pbuf */
1103:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);
1104:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (r == NULL) {
1105:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LINK_STATS_INC(link.memerr);
1106:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LINK_STATS_INC(link.drop);
1107:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1108:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return ERR_MEM;
1109:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1110:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1111:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   clen = pbuf_clen(r);
1112:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* check for overflow or too many pbuf on queue */
1113:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (((netif->loop_cnt_current + clen) < netif->loop_cnt_current) ||
1114:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       ((netif->loop_cnt_current + clen) > LWIP_MIN(LWIP_LOOPBACK_MAX_PBUFS, 0xFFFF))) {
1115:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     pbuf_free(r);
1116:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LINK_STATS_INC(link.memerr);
1117:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LINK_STATS_INC(link.drop);
1118:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1119:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return ERR_MEM;
1120:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1121:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif->loop_cnt_current = (u16_t)(netif->loop_cnt_current + clen);
1122:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1123:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1124:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Copy the whole pbuf queue p into the single pbuf r */
1125:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if ((err = pbuf_copy(r, p)) != ERR_OK) {
1126:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     pbuf_free(r);
1127:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LINK_STATS_INC(link.memerr);
1128:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LINK_STATS_INC(link.drop);
1129:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifoutdiscards);
1130:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return err;
1131:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1132:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1133:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Put the packet on a linked list which gets emptied through calling
1134:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****      netif_poll(). */
1135:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1136:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* let last point to the last pbuf in chain r */
1137:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   for (last = r; last->next != NULL; last = last->next) {
1138:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* nothing to do here, just get to the last pbuf */
1139:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1140:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1141:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   SYS_ARCH_PROTECT(lev);
1142:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif->loop_first != NULL) {
1143:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_ASSERT("if first != NULL, last must also be != NULL", netif->loop_last != NULL);
1144:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->loop_last->next = r;
1145:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->loop_last = last;
1146:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   } else {
1147:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->loop_first = r;
1148:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->loop_last = last;
1149:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1150:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* No existing packets queued, schedule poll */
1151:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     schedule_poll = 1;
1152:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1153:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1154:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   SYS_ARCH_UNPROTECT(lev);
1155:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1156:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LINK_STATS_INC(link.xmit);
1157:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   MIB2_STATS_NETIF_ADD(stats_if, ifoutoctets, p->tot_len);
1158:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   MIB2_STATS_NETIF_INC(stats_if, ifoutucastpkts);
1159:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1160:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
1161:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* For multithreading environment, schedule a call to netif_poll */
1162:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (schedule_poll) {
1163:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     tcpip_try_callback((tcpip_callback_fn)netif_poll, netif);
1164:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1165:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
1166:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1167:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return ERR_OK;
1168:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1169:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1170:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_HAVE_LOOPIF
1171:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
1172:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t
1173:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_loop_output_ipv4(struct netif *netif, struct pbuf *p, const ip4_addr_t *addr)
1174:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1175:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_UNUSED_ARG(addr);
1176:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return netif_loop_output(netif, p);
1177:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1178:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
1179:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1180:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
1181:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t
1182:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_loop_output_ipv6(struct netif *netif, struct pbuf *p, const ip6_addr_t *addr)
1183:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1184:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_UNUSED_ARG(addr);
1185:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return netif_loop_output(netif, p);
1186:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1187:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
1188:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1189:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1190:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1191:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1192:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Call netif_poll() in the main loop of your application. This is to prevent
1193:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * reentering non-reentrant functions like tcp_input(). Packets passed to
1194:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * netif_loop_output() are put on a list that is passed to netif->input() by
1195:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * netif_poll().
1196:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1197:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
1198:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_poll(struct netif *netif)
1199:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1200:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* If we have a loopif, SNMP counters are adjusted for it,
1201:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    * if not they are adjusted for 'netif'. */
1202:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if MIB2_STATS
1203:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_HAVE_LOOPIF
1204:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *stats_if = &loop_netif;
1205:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else /* LWIP_HAVE_LOOPIF */
1206:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *stats_if = netif;
1207:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
1208:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* MIB2_STATS */
1209:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   SYS_ARCH_DECL_PROTECT(lev);
1210:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1211:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_poll: invalid netif", netif != NULL);
1212:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1213:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Get a packet from the list. With SYS_LIGHTWEIGHT_PROT=1, this is protected */
1214:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   SYS_ARCH_PROTECT(lev);
1215:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   while (netif->loop_first != NULL) {
1216:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     struct pbuf *in, *in_end;
1217:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1218:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     u8_t clen = 1;
1219:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1220:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1221:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     in = in_end = netif->loop_first;
1222:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     while (in_end->len != in_end->tot_len) {
1223:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       LWIP_ASSERT("bogus pbuf: len != tot_len but next == NULL!", in_end->next != NULL);
1224:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       in_end = in_end->next;
1225:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1226:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       clen++;
1227:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1228:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1229:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_LOOPBACK_MAX_PBUFS
1230:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* adjust the number of pbufs on queue */
1231:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_ASSERT("netif->loop_cnt_current underflow",
1232:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                 ((netif->loop_cnt_current - clen) < netif->loop_cnt_current));
1233:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->loop_cnt_current = (u16_t)(netif->loop_cnt_current - clen);
1234:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_LOOPBACK_MAX_PBUFS */
1235:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1236:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* 'in_end' now points to the last pbuf from 'in' */
1237:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (in_end == netif->loop_last) {
1238:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       /* this was the last pbuf in the list */
1239:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif->loop_first = netif->loop_last = NULL;
1240:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     } else {
1241:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       /* pop the pbuf off the list */
1242:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif->loop_first = in_end->next;
1243:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       LWIP_ASSERT("should not be null since first != last!", netif->loop_first != NULL);
1244:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1245:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* De-queue the pbuf from its successors on the 'loop_' list. */
1246:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     in_end->next = NULL;
1247:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     SYS_ARCH_UNPROTECT(lev);
1248:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1249:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     in->if_idx = netif_get_index(netif);
1250:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1251:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LINK_STATS_INC(link.recv);
1252:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     MIB2_STATS_NETIF_ADD(stats_if, ifinoctets, in->tot_len);
1253:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     MIB2_STATS_NETIF_INC(stats_if, ifinucastpkts);
1254:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* loopback packets are always IP packets! */
1255:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (ip_input(in, netif) != ERR_OK) {
1256:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       pbuf_free(in);
1257:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1258:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     SYS_ARCH_PROTECT(lev);
1259:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1260:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   SYS_ARCH_UNPROTECT(lev);
1261:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1262:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1263:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if !LWIP_NETIF_LOOPBACK_MULTITHREADING
1264:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1265:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Calls netif_poll() for every netif on the netif_list.
1266:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1267:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
1268:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_poll_all(void)
1269:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1270:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *netif;
1271:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* loop through netifs */
1272:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   NETIF_FOREACH(netif) {
1273:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif_poll(netif);
1274:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1275:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1276:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* !LWIP_NETIF_LOOPBACK_MULTITHREADING */
1277:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* ENABLE_LOOPBACK */
1278:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1279:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 0
1280:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1281:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_cd
1282:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Allocate an index to store data in client_data member of struct netif.
1283:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Returned value is an index in mentioned array.
1284:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @see LWIP_NUM_NETIF_CLIENT_DATA
1285:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1286:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** u8_t
1287:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_alloc_client_data_id(void)
1288:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1289:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   u8_t result = netif_client_id;
1290:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_client_id++;
1291:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1292:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1293:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1294:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NUM_NETIF_CLIENT_DATA > 256
1295:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #error LWIP_NUM_NETIF_CLIENT_DATA must be <= 256
1296:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
1297:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("Increase LWIP_NUM_NETIF_CLIENT_DATA in lwipopts.h", result < LWIP_NUM_NETIF_CLIENT_D
1298:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return (u8_t)(result + LWIP_NETIF_CLIENT_DATA_INDEX_MAX);
1299:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1300:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
1301:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1302:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6
1303:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1304:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_ip6
1305:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Change an IPv6 address of a network interface
1306:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1307:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the network interface to change
1308:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param addr_idx index of the IPv6 address
1309:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param addr6 the new IPv6 address
1310:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1311:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @note call netif_ip6_addr_set_state() to set the address valid/temptative
1312:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1313:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
1314:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_ip6_addr_set(struct netif *netif, s8_t addr_idx, const ip6_addr_t *addr6)
1315:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1316:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1317:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1318:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_ip6_addr_set: invalid netif", netif != NULL);
1319:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_ip6_addr_set: invalid addr6", addr6 != NULL);
1320:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1321:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_ip6_addr_set_parts(netif, addr_idx, addr6->addr[0], addr6->addr[1],
1322:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****                            addr6->addr[2], addr6->addr[3]);
1323:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1324:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1325:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /*
1326:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Change an IPv6 address of a network interface (internal version taking 4 * u32_t)
1327:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1328:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the network interface to change
1329:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param addr_idx index of the IPv6 address
1330:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param i0 word0 of the new IPv6 address
1331:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param i1 word1 of the new IPv6 address
1332:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param i2 word2 of the new IPv6 address
1333:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param i3 word3 of the new IPv6 address
1334:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1335:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
1336:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_ip6_addr_set_parts(struct netif *netif, s8_t addr_idx, u32_t i0, u32_t i1, u32_t i2, u32_t i3
1337:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1338:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t old_addr;
1339:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_addr_t new_ipaddr;
1340:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1341:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif != NULL", netif != NULL);
1342:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("invalid index", addr_idx < LWIP_IPV6_NUM_ADDRESSES);
1343:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1344:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip6_addr_copy(*ip_2_ip6(&old_addr), *netif_ip6_addr(netif, addr_idx));
1345:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   IP_SET_TYPE_VAL(old_addr, IPADDR_TYPE_V6);
1346:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1347:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* address is actually being changed? */
1348:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if ((ip_2_ip6(&old_addr)->addr[0] != i0) || (ip_2_ip6(&old_addr)->addr[1] != i1) ||
1349:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       (ip_2_ip6(&old_addr)->addr[2] != i2) || (ip_2_ip6(&old_addr)->addr[3] != i3)) {
1350:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_ip6_addr_set: netif address being changed\n")
1351:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1352:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     IP_ADDR6(&new_ipaddr, i0, i1, i2, i3);
1353:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip6_addr_assign_zone(ip_2_ip6(&new_ipaddr), IP6_UNICAST, netif);
1354:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1355:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, addr_idx))) {
1356:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, addr_idx), &new_ipaddr);
1357:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1358:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* @todo: remove/readd mib2 ip6 entries? */
1359:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1360:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_addr_copy(netif->ip6_addr[addr_idx], new_ipaddr);
1361:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1362:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (ip6_addr_isvalid(netif_ip6_addr_state(netif, addr_idx))) {
1363:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV6);
1364:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       NETIF_STATUS_CALLBACK(netif);
1365:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1366:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1367:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1368:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     {
1369:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_ext_callback_args_t args;
1370:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.ipv6_set.addr_index  = addr_idx;
1371:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.ipv6_set.old_address = &old_addr;
1372:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_IPV6_SET, &args);
1373:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1374:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
1375:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1376:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1377:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: IPv6 address %d of interface 
1378:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****               addr_idx, netif->name[0], netif->name[1], ip6addr_ntoa(netif_ip6_addr(netif, addr_idx
1379:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****               netif_ip6_addr_state(netif, addr_idx)));
1380:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1381:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1382:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1383:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_ip6
1384:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Change the state of an IPv6 address of a network interface
1385:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * (INVALID, TEMPTATIVE, PREFERRED, DEPRECATED, where TEMPTATIVE
1386:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * includes the number of checks done, see ip6_addr.h)
1387:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1388:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the network interface to change
1389:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param addr_idx index of the IPv6 address
1390:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param state the new IPv6 address state
1391:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1392:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
1393:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_ip6_addr_set_state(struct netif *netif, s8_t addr_idx, u8_t state)
1394:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1395:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   u8_t old_state;
1396:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1397:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif != NULL", netif != NULL);
1398:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("invalid index", addr_idx < LWIP_IPV6_NUM_ADDRESSES);
1399:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1400:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   old_state = netif_ip6_addr_state(netif, addr_idx);
1401:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* state is actually being changed? */
1402:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (old_state != state) {
1403:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     u8_t old_valid = old_state & IP6_ADDR_VALID;
1404:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     u8_t new_valid = state & IP6_ADDR_VALID;
1405:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_ip6_addr_set_state: netif address state being
1406:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1407:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_MLD
1408:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* Reevaluate solicited-node multicast group membership. */
1409:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (netif->flags & NETIF_FLAG_MLD6) {
1410:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       nd6_adjust_mld_membership(netif, addr_idx, state);
1411:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1412:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_MLD */
1413:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1414:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (old_valid && !new_valid) {
1415:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       /* address about to be removed by setting invalid */
1416:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_do_ip_addr_changed(netif_ip_addr6(netif, addr_idx), NULL);
1417:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       /* @todo: remove mib2 ip6 entries? */
1418:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1419:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     netif->ip6_addr_state[addr_idx] = state;
1420:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1421:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (!old_valid && new_valid) {
1422:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       /* address added by setting valid */
1423:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       /* This is a good moment to check that the address is properly zoned. */
1424:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       IP6_ADDR_ZONECHECK_NETIF(netif_ip6_addr(netif, addr_idx), netif);
1425:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       /* @todo: add mib2 ip6 entries? */
1426:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_issue_reports(netif, NETIF_REPORT_TYPE_IPV6);
1427:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1428:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if ((old_state & ~IP6_ADDR_TENTATIVE_COUNT_MASK) !=
1429:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         (state     & ~IP6_ADDR_TENTATIVE_COUNT_MASK)) {
1430:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       /* address state has changed -> call the callback function */
1431:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       NETIF_STATUS_CALLBACK(netif);
1432:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1433:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1434:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_NETIF_EXT_STATUS_CALLBACK
1435:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     {
1436:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_ext_callback_args_t args;
1437:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.ipv6_addr_state_changed.addr_index = addr_idx;
1438:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.ipv6_addr_state_changed.old_state  = old_state;
1439:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       args.ipv6_addr_state_changed.address    = netif_ip_addr6(netif, addr_idx);
1440:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_invoke_ext_callback(netif, LWIP_NSC_IPV6_ADDR_STATE_CHANGED, &args);
1441:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1442:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif
1443:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1444:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: IPv6 address %d of interface 
1445:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****               addr_idx, netif->name[0], netif->name[1], ip6addr_ntoa(netif_ip6_addr(netif, addr_idx
1446:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****               netif_ip6_addr_state(netif, addr_idx)));
1447:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1448:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1449:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1450:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Checks if a specific local address is present on the netif and returns its
1451:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * index. Depending on its state, it may or may not be assigned to the
1452:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * interface (as per RFC terminology).
1453:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1454:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * The given address may or may not be zoned (i.e., have a zone index other
1455:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * than IP6_NO_ZONE). If the address is zoned, it must have the correct zone
1456:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * for the given netif, or no match will be found.
1457:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1458:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the netif to check
1459:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param ip6addr the IPv6 address to find
1460:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @return >= 0: address found, this is its index
1461:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *         -1: address not found on this netif
1462:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1463:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** s8_t
1464:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_get_ip6_addr_match(struct netif *netif, const ip6_addr_t *ip6addr)
1465:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1466:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   s8_t i;
1467:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1468:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1469:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1470:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_get_ip6_addr_match: invalid netif", netif != NULL);
1471:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_get_ip6_addr_match: invalid ip6addr", ip6addr != NULL);
1472:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1473:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_SCOPES
1474:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (ip6_addr_has_zone(ip6addr) && !ip6_addr_test_zone(ip6addr, netif)) {
1475:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return -1; /* wrong zone, no match */
1476:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1477:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_SCOPES */
1478:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1479:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
1480:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (!ip6_addr_isinvalid(netif_ip6_addr_state(netif, i)) &&
1481:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         ip6_addr_cmp_zoneless(netif_ip6_addr(netif, i), ip6addr)) {
1482:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       return i;
1483:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1484:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1485:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return -1;
1486:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1487:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1488:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1489:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_ip6
1490:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Create a link-local IPv6 address on a netif (stored in slot 0)
1491:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1492:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif the netif to create the address on
1493:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param from_mac_48bit if != 0, assume hwadr is a 48-bit MAC address (std conversion)
1494:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *                       if == 0, use hwaddr directly as interface ID
1495:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1496:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** void
1497:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_create_ip6_linklocal_address(struct netif *netif, u8_t from_mac_48bit)
1498:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1499:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   u8_t i, addr_index;
1500:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1501:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1502:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1503:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_create_ip6_linklocal_address: invalid netif", netif != NULL);
1504:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1505:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Link-local prefix. */
1506:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_2_ip6(&netif->ip6_addr[0])->addr[0] = PP_HTONL(0xfe800000ul);
1507:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip_2_ip6(&netif->ip6_addr[0])->addr[1] = 0;
1508:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1509:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Generate interface ID. */
1510:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (from_mac_48bit) {
1511:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* Assume hwaddr is a 48-bit IEEE 802 MAC. Convert to EUI-64 address. Complement Group bit. */
1512:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[2] = lwip_htonl((((u32_t)(netif->hwaddr[0] ^ 0x02)) << 24) 
1513:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         ((u32_t)(netif->hwaddr[1]) << 16) |
1514:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         ((u32_t)(netif->hwaddr[2]) << 8) |
1515:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         (0xff));
1516:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[3] = lwip_htonl((u32_t)(0xfeul << 24) |
1517:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         ((u32_t)(netif->hwaddr[3]) << 16) |
1518:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         ((u32_t)(netif->hwaddr[4]) << 8) |
1519:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         (netif->hwaddr[5]));
1520:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   } else {
1521:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* Use hwaddr directly as interface ID. */
1522:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[2] = 0;
1523:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     ip_2_ip6(&netif->ip6_addr[0])->addr[3] = 0;
1524:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1525:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     addr_index = 3;
1526:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     for (i = 0; (i < 8) && (i < netif->hwaddr_len); i++) {
1527:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       if (i == 4) {
1528:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         addr_index--;
1529:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       }
1530:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       ip_2_ip6(&netif->ip6_addr[0])->addr[addr_index] |= lwip_htonl(((u32_t)(netif->hwaddr[netif->h
1531:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1532:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1533:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1534:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Set a link-local zone. Even though the zone is implied by the owning
1535:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    * netif, setting the zone anyway has two important conceptual advantages:
1536:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    * 1) it avoids the need for a ton of exceptions in internal code, allowing
1537:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    *    e.g. ip6_addr_cmp() to be used on local addresses;
1538:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    * 2) the properly zoned address is visible externally, e.g. when any outside
1539:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    *    code enumerates available addresses or uses one to bind a socket.
1540:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    * Any external code unaware of address scoping is likely to just ignore the
1541:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****    * zone field, so this should not create any compatibility problems. */
1542:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   ip6_addr_assign_zone(ip_2_ip6(&netif->ip6_addr[0]), IP6_UNICAST, netif);
1543:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1544:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Set address state. */
1545:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV6_DUP_DETECT_ATTEMPTS
1546:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Will perform duplicate address detection (DAD). */
1547:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_ip6_addr_set_state(netif, 0, IP6_ADDR_TENTATIVE);
1548:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #else
1549:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Consider address valid. */
1550:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   netif_ip6_addr_set_state(netif, 0, IP6_ADDR_PREFERRED);
1551:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6_AUTOCONFIG */
1552:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1553:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1554:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1555:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif_ip6
1556:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * This function allows for the easy addition of a new IPv6 address to an interface.
1557:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * It takes care of finding an empty slot and then sets the address tentative
1558:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * (to make sure that all the subsequent processing happens).
1559:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1560:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param netif netif to add the address on
1561:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param ip6addr address to add
1562:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param chosen_idx if != NULL, the chosen IPv6 address index will be stored here
1563:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1564:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** err_t
1565:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_add_ip6_address(struct netif *netif, const ip6_addr_t *ip6addr, s8_t *chosen_idx)
1566:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1567:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   s8_t i;
1568:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1569:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1570:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1571:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_add_ip6_address: invalid netif", netif != NULL);
1572:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT("netif_add_ip6_address: invalid ip6addr", ip6addr != NULL);
1573:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1574:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   i = netif_get_ip6_addr_match(netif, ip6addr);
1575:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (i >= 0) {
1576:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     /* Address already added */
1577:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (chosen_idx != NULL) {
1578:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       *chosen_idx = i;
1579:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1580:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return ERR_OK;
1581:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1582:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1583:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* Find a free slot. The first one is reserved for link-local addresses. */
1584:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   for (i = ip6_addr_islinklocal(ip6addr) ? 0 : 1; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
1585:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (ip6_addr_isinvalid(netif_ip6_addr_state(netif, i))) {
1586:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       ip_addr_copy_from_ip6(netif->ip6_addr[i], *ip6addr);
1587:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       ip6_addr_assign_zone(ip_2_ip6(&netif->ip6_addr[i]), IP6_UNICAST, netif);
1588:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       netif_ip6_addr_set_state(netif, i, IP6_ADDR_TENTATIVE);
1589:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       if (chosen_idx != NULL) {
1590:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         *chosen_idx = i;
1591:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       }
1592:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       return ERR_OK;
1593:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1594:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1595:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1596:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (chosen_idx != NULL) {
1597:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     *chosen_idx = -1;
1598:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1599:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return ERR_VAL;
1600:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1601:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1602:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /** Dummy IPv6 output function for netifs not supporting IPv6
1603:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1604:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t
1605:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_null_output_ip6(struct netif *netif, struct pbuf *p, const ip6_addr_t *ipaddr)
1606:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
1607:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_UNUSED_ARG(netif);
1608:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_UNUSED_ARG(p);
1609:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_UNUSED_ARG(ipaddr);
1610:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1611:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return ERR_IF;
1612:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
1613:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV6 */
1614:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1615:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #if LWIP_IPV4
1616:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /** Dummy IPv4 output function for netifs not supporting IPv4
1617:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1618:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** static err_t
1619:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_null_output_ip4(struct netif *netif, struct pbuf *p, const ip4_addr_t *ipaddr)
1620:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1574              	 .loc 1 1620 0
 1575              	 .cfi_startproc
 1576              	 
 1577              	 
 1578              	 
 1579 0000 80B4     	 push {r7}
 1580              	.LCFI103:
 1581              	 .cfi_def_cfa_offset 4
 1582              	 .cfi_offset 7,-4
 1583 0002 85B0     	 sub sp,sp,#20
 1584              	.LCFI104:
 1585              	 .cfi_def_cfa_offset 24
 1586 0004 00AF     	 add r7,sp,#0
 1587              	.LCFI105:
 1588              	 .cfi_def_cfa_register 7
 1589 0006 F860     	 str r0,[r7,#12]
 1590 0008 B960     	 str r1,[r7,#8]
 1591 000a 7A60     	 str r2,[r7,#4]
1621:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_UNUSED_ARG(netif);
1622:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_UNUSED_ARG(p);
1623:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_UNUSED_ARG(ipaddr);
1624:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1625:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return ERR_IF;
 1592              	 .loc 1 1625 0
 1593 000c F423     	 movs r3,#244
 1594 000e 5BB2     	 sxtb r3,r3
1626:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1595              	 .loc 1 1626 0
 1596 0010 1846     	 mov r0,r3
 1597 0012 1437     	 adds r7,r7,#20
 1598              	.LCFI106:
 1599              	 .cfi_def_cfa_offset 4
 1600 0014 BD46     	 mov sp,r7
 1601              	.LCFI107:
 1602              	 .cfi_def_cfa_register 13
 1603              	 
 1604 0016 5DF8047B 	 ldr r7,[sp],#4
 1605              	.LCFI108:
 1606              	 .cfi_restore 7
 1607              	 .cfi_def_cfa_offset 0
 1608 001a 7047     	 bx lr
 1609              	 .cfi_endproc
 1610              	.LFE157:
 1612              	 .section .text.netif_name_to_index,"ax",%progbits
 1613              	 .align 2
 1614              	 .global netif_name_to_index
 1615              	 .thumb
 1616              	 .thumb_func
 1618              	netif_name_to_index:
 1619              	.LFB158:
1627:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** #endif /* LWIP_IPV4 */
1628:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1629:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1630:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * @ingroup netif
1631:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * Return the interface index for the netif with name
1632:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * or NETIF_NO_INDEX if not found/on error
1633:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** *
1634:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * @param name the name of the netif
1635:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** */
1636:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** u8_t
1637:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_name_to_index(const char *name)
1638:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1620              	 .loc 1 1638 0
 1621              	 .cfi_startproc
 1622              	 
 1623              	 
 1624 0000 80B5     	 push {r7,lr}
 1625              	.LCFI109:
 1626              	 .cfi_def_cfa_offset 8
 1627              	 .cfi_offset 7,-8
 1628              	 .cfi_offset 14,-4
 1629 0002 84B0     	 sub sp,sp,#16
 1630              	.LCFI110:
 1631              	 .cfi_def_cfa_offset 24
 1632 0004 00AF     	 add r7,sp,#0
 1633              	.LCFI111:
 1634              	 .cfi_def_cfa_register 7
 1635 0006 7860     	 str r0,[r7,#4]
1639:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *netif = netif_find(name);
 1636              	 .loc 1 1639 0
 1637 0008 7868     	 ldr r0,[r7,#4]
 1638 000a FFF7FEFF 	 bl netif_find
 1639 000e F860     	 str r0,[r7,#12]
1640:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif != NULL) {
 1640              	 .loc 1 1640 0
 1641 0010 FB68     	 ldr r3,[r7,#12]
 1642 0012 002B     	 cmp r3,#0
 1643 0014 05D0     	 beq .L106
1641:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return netif_get_index(netif);
 1644              	 .loc 1 1641 0
 1645 0016 FB68     	 ldr r3,[r7,#12]
 1646 0018 93F83030 	 ldrb r3,[r3,#48]
 1647 001c 0133     	 adds r3,r3,#1
 1648 001e DBB2     	 uxtb r3,r3
 1649 0020 00E0     	 b .L107
 1650              	.L106:
1642:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1643:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   /* No name found, return invalid index */
1644:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return NETIF_NO_INDEX;
 1651              	 .loc 1 1644 0
 1652 0022 0023     	 movs r3,#0
 1653              	.L107:
1645:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1654              	 .loc 1 1645 0
 1655 0024 1846     	 mov r0,r3
 1656 0026 1037     	 adds r7,r7,#16
 1657              	.LCFI112:
 1658              	 .cfi_def_cfa_offset 8
 1659 0028 BD46     	 mov sp,r7
 1660              	.LCFI113:
 1661              	 .cfi_def_cfa_register 13
 1662              	 
 1663 002a 80BD     	 pop {r7,pc}
 1664              	 .cfi_endproc
 1665              	.LFE158:
 1667              	 .section .text.netif_index_to_name,"ax",%progbits
 1668              	 .align 2
 1669              	 .global netif_index_to_name
 1670              	 .thumb
 1671              	 .thumb_func
 1673              	netif_index_to_name:
 1674              	.LFB159:
1646:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1647:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1648:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * @ingroup netif
1649:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * Return the interface name for the netif matching index
1650:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * or NULL if not found/on error
1651:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** *
1652:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * @param idx the interface index of the netif
1653:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * @param name char buffer of at least NETIF_NAMESIZE bytes
1654:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** */
1655:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** char *
1656:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_index_to_name(u8_t idx, char *name)
1657:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1675              	 .loc 1 1657 0
 1676              	 .cfi_startproc
 1677              	 
 1678              	 
 1679 0000 80B5     	 push {r7,lr}
 1680              	.LCFI114:
 1681              	 .cfi_def_cfa_offset 8
 1682              	 .cfi_offset 7,-8
 1683              	 .cfi_offset 14,-4
 1684 0002 84B0     	 sub sp,sp,#16
 1685              	.LCFI115:
 1686              	 .cfi_def_cfa_offset 24
 1687 0004 00AF     	 add r7,sp,#0
 1688              	.LCFI116:
 1689              	 .cfi_def_cfa_register 7
 1690 0006 0346     	 mov r3,r0
 1691 0008 3960     	 str r1,[r7]
 1692 000a FB71     	 strb r3,[r7,#7]
1658:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *netif = netif_get_by_index(idx);
 1693              	 .loc 1 1658 0
 1694 000c FB79     	 ldrb r3,[r7,#7]
 1695 000e 1846     	 mov r0,r3
 1696 0010 FFF7FEFF 	 bl netif_get_by_index
 1697 0014 F860     	 str r0,[r7,#12]
1659:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1660:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (netif != NULL) {
 1698              	 .loc 1 1660 0
 1699 0016 FB68     	 ldr r3,[r7,#12]
 1700 0018 002B     	 cmp r3,#0
 1701 001a 15D0     	 beq .L109
1661:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     name[0] = netif->name[0];
 1702              	 .loc 1 1661 0
 1703 001c FB68     	 ldr r3,[r7,#12]
 1704 001e 93F82E20 	 ldrb r2,[r3,#46]
 1705 0022 3B68     	 ldr r3,[r7]
 1706 0024 1A70     	 strb r2,[r3]
1662:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     name[1] = netif->name[1];
 1707              	 .loc 1 1662 0
 1708 0026 3B68     	 ldr r3,[r7]
 1709 0028 0133     	 adds r3,r3,#1
 1710 002a FA68     	 ldr r2,[r7,#12]
 1711 002c 92F82F20 	 ldrb r2,[r2,#47]
 1712 0030 1A70     	 strb r2,[r3]
1663:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     lwip_itoa(&name[2], NETIF_NAMESIZE - 2, netif_index_to_num(idx));
 1713              	 .loc 1 1663 0
 1714 0032 3B68     	 ldr r3,[r7]
 1715 0034 9A1C     	 adds r2,r3,#2
 1716 0036 FB79     	 ldrb r3,[r7,#7]
 1717 0038 013B     	 subs r3,r3,#1
 1718 003a 1046     	 mov r0,r2
 1719 003c 0421     	 movs r1,#4
 1720 003e 1A46     	 mov r2,r3
 1721 0040 FFF7FEFF 	 bl lwip_itoa
1664:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return name;
 1722              	 .loc 1 1664 0
 1723 0044 3B68     	 ldr r3,[r7]
 1724 0046 00E0     	 b .L110
 1725              	.L109:
1665:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1666:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return NULL;
 1726              	 .loc 1 1666 0
 1727 0048 0023     	 movs r3,#0
 1728              	.L110:
1667:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1729              	 .loc 1 1667 0
 1730 004a 1846     	 mov r0,r3
 1731 004c 1037     	 adds r7,r7,#16
 1732              	.LCFI117:
 1733              	 .cfi_def_cfa_offset 8
 1734 004e BD46     	 mov sp,r7
 1735              	.LCFI118:
 1736              	 .cfi_def_cfa_register 13
 1737              	 
 1738 0050 80BD     	 pop {r7,pc}
 1739              	 .cfi_endproc
 1740              	.LFE159:
 1742 0052 00BF     	 .section .text.netif_get_by_index,"ax",%progbits
 1743              	 .align 2
 1744              	 .global netif_get_by_index
 1745              	 .thumb
 1746              	 .thumb_func
 1748              	netif_get_by_index:
 1749              	.LFB160:
1668:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1669:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1670:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * @ingroup netif
1671:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * Return the interface for the netif index
1672:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** *
1673:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** * @param idx index of netif to find
1674:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** */
1675:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** struct netif *
1676:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_get_by_index(u8_t idx)
1677:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1750              	 .loc 1 1677 0
 1751              	 .cfi_startproc
 1752              	 
 1753              	 
 1754              	 
 1755 0000 80B4     	 push {r7}
 1756              	.LCFI119:
 1757              	 .cfi_def_cfa_offset 4
 1758              	 .cfi_offset 7,-4
 1759 0002 85B0     	 sub sp,sp,#20
 1760              	.LCFI120:
 1761              	 .cfi_def_cfa_offset 24
 1762 0004 00AF     	 add r7,sp,#0
 1763              	.LCFI121:
 1764              	 .cfi_def_cfa_register 7
 1765 0006 0346     	 mov r3,r0
 1766 0008 FB71     	 strb r3,[r7,#7]
1678:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *netif;
1679:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1680:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1681:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1682:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (idx != NETIF_NO_INDEX) {
 1767              	 .loc 1 1682 0
 1768 000a FB79     	 ldrb r3,[r7,#7]
 1769 000c 002B     	 cmp r3,#0
 1770 000e 13D0     	 beq .L112
1683:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_FOREACH(netif) {
 1771              	 .loc 1 1683 0
 1772 0010 0D4B     	 ldr r3,.L117
 1773 0012 1B68     	 ldr r3,[r3]
 1774 0014 FB60     	 str r3,[r7,#12]
 1775 0016 0CE0     	 b .L113
 1776              	.L116:
1684:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       if (idx == netif_get_index(netif)) {
 1777              	 .loc 1 1684 0
 1778 0018 FB68     	 ldr r3,[r7,#12]
 1779 001a 93F83030 	 ldrb r3,[r3,#48]
 1780 001e 0133     	 adds r3,r3,#1
 1781 0020 DBB2     	 uxtb r3,r3
 1782 0022 FA79     	 ldrb r2,[r7,#7]
 1783 0024 9A42     	 cmp r2,r3
 1784 0026 01D1     	 bne .L114
1685:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         return netif; /* found! */
 1785              	 .loc 1 1685 0
 1786 0028 FB68     	 ldr r3,[r7,#12]
 1787 002a 06E0     	 b .L115
 1788              	.L114:
1683:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_FOREACH(netif) {
 1789              	 .loc 1 1683 0 discriminator 2
 1790 002c FB68     	 ldr r3,[r7,#12]
 1791 002e 1B68     	 ldr r3,[r3]
 1792 0030 FB60     	 str r3,[r7,#12]
 1793              	.L113:
1683:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     NETIF_FOREACH(netif) {
 1794              	 .loc 1 1683 0 is_stmt 0 discriminator 1
 1795 0032 FB68     	 ldr r3,[r7,#12]
 1796 0034 002B     	 cmp r3,#0
 1797 0036 EFD1     	 bne .L116
 1798              	.L112:
1686:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       }
1687:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1688:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1689:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1690:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return NULL;
 1799              	 .loc 1 1690 0 is_stmt 1
 1800 0038 0023     	 movs r3,#0
 1801              	.L115:
1691:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1802              	 .loc 1 1691 0
 1803 003a 1846     	 mov r0,r3
 1804 003c 1437     	 adds r7,r7,#20
 1805              	.LCFI122:
 1806              	 .cfi_def_cfa_offset 4
 1807 003e BD46     	 mov sp,r7
 1808              	.LCFI123:
 1809              	 .cfi_def_cfa_register 13
 1810              	 
 1811 0040 5DF8047B 	 ldr r7,[sp],#4
 1812              	.LCFI124:
 1813              	 .cfi_restore 7
 1814              	 .cfi_def_cfa_offset 0
 1815 0044 7047     	 bx lr
 1816              	.L118:
 1817 0046 00BF     	 .align 2
 1818              	.L117:
 1819 0048 00000000 	 .word netif_list
 1820              	 .cfi_endproc
 1821              	.LFE160:
 1823              	 .section .text.netif_find,"ax",%progbits
 1824              	 .align 2
 1825              	 .global netif_find
 1826              	 .thumb
 1827              	 .thumb_func
 1829              	netif_find:
 1830              	.LFB161:
1692:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1693:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** /**
1694:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @ingroup netif
1695:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * Find a network interface by searching for its name
1696:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  *
1697:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * @param name the name of the netif (like netif->name) plus concatenated number
1698:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  * in ascii representation (e.g. 'en0')
1699:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****  */
1700:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** struct netif *
1701:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** netif_find(const char *name)
1702:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** {
 1831              	 .loc 1 1702 0
 1832              	 .cfi_startproc
 1833              	 
 1834              	 
 1835 0000 80B5     	 push {r7,lr}
 1836              	.LCFI125:
 1837              	 .cfi_def_cfa_offset 8
 1838              	 .cfi_offset 7,-8
 1839              	 .cfi_offset 14,-4
 1840 0002 84B0     	 sub sp,sp,#16
 1841              	.LCFI126:
 1842              	 .cfi_def_cfa_offset 24
 1843 0004 00AF     	 add r7,sp,#0
 1844              	.LCFI127:
 1845              	 .cfi_def_cfa_register 7
 1846 0006 7860     	 str r0,[r7,#4]
1703:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   struct netif *netif;
1704:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   u8_t num;
1705:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1706:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_ASSERT_CORE_LOCKED();
1707:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1708:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   if (name == NULL) {
 1847              	 .loc 1 1708 0
 1848 0008 7B68     	 ldr r3,[r7,#4]
 1849 000a 002B     	 cmp r3,#0
 1850 000c 01D1     	 bne .L120
1709:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     return NULL;
 1851              	 .loc 1 1709 0
 1852 000e 0023     	 movs r3,#0
 1853 0010 28E0     	 b .L121
 1854              	.L120:
1710:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1711:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1712:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   num = (u8_t)atoi(&name[2]);
 1855              	 .loc 1 1712 0
 1856 0012 7B68     	 ldr r3,[r7,#4]
 1857 0014 0233     	 adds r3,r3,#2
 1858 0016 1846     	 mov r0,r3
 1859 0018 FFF7FEFF 	 bl atoi
 1860 001c 0346     	 mov r3,r0
 1861 001e FB72     	 strb r3,[r7,#11]
1713:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** 
1714:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   NETIF_FOREACH(netif) {
 1862              	 .loc 1 1714 0
 1863 0020 124B     	 ldr r3,.L125
 1864 0022 1B68     	 ldr r3,[r3]
 1865 0024 FB60     	 str r3,[r7,#12]
 1866 0026 19E0     	 b .L122
 1867              	.L124:
1715:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (num == netif->num &&
 1868              	 .loc 1 1715 0
 1869 0028 FB68     	 ldr r3,[r7,#12]
 1870 002a 93F83030 	 ldrb r3,[r3,#48]
 1871 002e FA7A     	 ldrb r2,[r7,#11]
 1872 0030 9A42     	 cmp r2,r3
 1873 0032 10D1     	 bne .L123
1716:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         name[0] == netif->name[0] &&
 1874              	 .loc 1 1716 0 discriminator 1
 1875 0034 7B68     	 ldr r3,[r7,#4]
 1876 0036 1A78     	 ldrb r2,[r3]
 1877 0038 FB68     	 ldr r3,[r7,#12]
 1878 003a 93F82E30 	 ldrb r3,[r3,#46]
1715:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (num == netif->num &&
 1879              	 .loc 1 1715 0 discriminator 1
 1880 003e 9A42     	 cmp r2,r3
 1881 0040 09D1     	 bne .L123
1717:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         name[1] == netif->name[1]) {
 1882              	 .loc 1 1717 0
 1883 0042 7B68     	 ldr r3,[r7,#4]
 1884 0044 0133     	 adds r3,r3,#1
 1885 0046 1A78     	 ldrb r2,[r3]
 1886 0048 FB68     	 ldr r3,[r7,#12]
 1887 004a 93F82F30 	 ldrb r3,[r3,#47]
1716:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****         name[0] == netif->name[0] &&
 1888              	 .loc 1 1716 0
 1889 004e 9A42     	 cmp r2,r3
 1890 0050 01D1     	 bne .L123
1718:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: found %c%c\n", name[0], name[1]));
1719:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****       return netif;
 1891              	 .loc 1 1719 0
 1892 0052 FB68     	 ldr r3,[r7,#12]
 1893 0054 06E0     	 b .L121
 1894              	.L123:
1714:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (num == netif->num &&
 1895              	 .loc 1 1714 0 discriminator 2
 1896 0056 FB68     	 ldr r3,[r7,#12]
 1897 0058 1B68     	 ldr r3,[r3]
 1898 005a FB60     	 str r3,[r7,#12]
 1899              	.L122:
1714:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     if (num == netif->num &&
 1900              	 .loc 1 1714 0 is_stmt 0 discriminator 1
 1901 005c FB68     	 ldr r3,[r7,#12]
 1902 005e 002B     	 cmp r3,#0
 1903 0060 E2D1     	 bne .L124
1720:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****     }
1721:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   }
1722:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: didn't find %c%c\n", name[0], name[1]));
1723:../Dave/Generated/ETH_LWIP/lwip/core/netif.c ****   return NULL;
 1904              	 .loc 1 1723 0 is_stmt 1
 1905 0062 0023     	 movs r3,#0
 1906              	.L121:
1724:../Dave/Generated/ETH_LWIP/lwip/core/netif.c **** }
 1907              	 .loc 1 1724 0
 1908 0064 1846     	 mov r0,r3
 1909 0066 1037     	 adds r7,r7,#16
 1910              	.LCFI128:
 1911              	 .cfi_def_cfa_offset 8
 1912 0068 BD46     	 mov sp,r7
 1913              	.LCFI129:
 1914              	 .cfi_def_cfa_register 13
 1915              	 
 1916 006a 80BD     	 pop {r7,pc}
 1917              	.L126:
 1918              	 .align 2
 1919              	.L125:
 1920 006c 00000000 	 .word netif_list
 1921              	 .cfi_endproc
 1922              	.LFE161:
 1924              	 .text
 1925              	.Letext0:
 1926              	 .file 2 "d:\\program files\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1927              	 .file 3 "d:\\program files\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1928              	 .file 4 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Dave/Generated/ETH_LWIP/lwip/include/lwip/arch.h"
 1929              	 .file 5 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Dave/Generated/ETH_LWIP/lwip/include/lwip/ip4_addr.h"
 1930              	 .file 6 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Dave/Generated/ETH_LWIP/lwip/include/lwip/ip_addr.h"
 1931              	 .file 7 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Dave/Generated/ETH_LWIP/lwip/include/lwip/err.h"
 1932              	 .file 8 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Dave/Generated/ETH_LWIP/lwip/include/lwip/pbuf.h"
 1933              	 .file 9 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Dave/Generated/ETH_LWIP/lwip/include/lwip/memp.h"
 1934              	 .file 10 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Dave/Generated/ETH_LWIP/lwip/include/lwip/netif.h"
 1935              	 .file 11 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Libraries/CMSIS/Include/cmsis_gcc.h"
 1936              	 .file 12 "D:/Users/Beheerder/Desktop/GPSBox/SensorMaritime-SensorBox/Sensorbox_firmware/GPSGyroAnalysisTool/GpsGyroAnalysisTool/GpsGyroAnalysisTool/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 netif.c
                            *COM*:00000004 netif_list
                            *COM*:00000004 netif_default
    {standard input}:24     .bss.netif_num:00000000 netif_num
    {standard input}:25     .bss.netif_num:00000000 $d
    {standard input}:27     .text.netif_init:00000000 $t
    {standard input}:32     .text.netif_init:00000000 netif_init
    {standard input}:61     .text.netif_input:00000000 $t
    {standard input}:66     .text.netif_input:00000000 netif_input
    {standard input}:119    .text.netif_add_noaddr:00000000 $t
    {standard input}:124    .text.netif_add_noaddr:00000000 netif_add_noaddr
    {standard input}:177    .text.netif_add:00000000 netif_add
    {standard input}:172    .text.netif_add:00000000 $t
    {standard input}:878    .text.netif_set_addr:00000000 netif_set_addr
    {standard input}:396    .text.netif_add:00000130 $d
    {standard input}:1572   .text.netif_null_output_ip4:00000000 netif_null_output_ip4
    {standard input}:404    .text.netif_do_ip_addr_changed:00000000 $t
    {standard input}:408    .text.netif_do_ip_addr_changed:00000000 netif_do_ip_addr_changed
    {standard input}:452    .text.netif_do_set_ipaddr:00000000 $t
    {standard input}:456    .text.netif_do_set_ipaddr:00000000 netif_do_set_ipaddr
    {standard input}:1242   .text.netif_issue_reports:00000000 netif_issue_reports
    {standard input}:541    .text.netif_set_ipaddr:00000000 $t
    {standard input}:546    .text.netif_set_ipaddr:00000000 netif_set_ipaddr
    {standard input}:596    .text.netif_set_ipaddr:00000030 $d
    {standard input}:601    .text.netif_do_set_netmask:00000000 $t
    {standard input}:605    .text.netif_do_set_netmask:00000000 netif_do_set_netmask
    {standard input}:673    .text.netif_set_netmask:00000000 $t
    {standard input}:678    .text.netif_set_netmask:00000000 netif_set_netmask
    {standard input}:732    .text.netif_set_netmask:00000030 $d
    {standard input}:737    .text.netif_do_set_gw:00000000 $t
    {standard input}:741    .text.netif_do_set_gw:00000000 netif_do_set_gw
    {standard input}:809    .text.netif_set_gw:00000000 $t
    {standard input}:814    .text.netif_set_gw:00000000 netif_set_gw
    {standard input}:868    .text.netif_set_gw:00000030 $d
    {standard input}:873    .text.netif_set_addr:00000000 $t
    {standard input}:992    .text.netif_set_addr:0000008c $d
    {standard input}:997    .text.netif_remove:00000000 $t
    {standard input}:1002   .text.netif_remove:00000000 netif_remove
    {standard input}:1322   .text.netif_set_down:00000000 netif_set_down
    {standard input}:1135   .text.netif_set_default:00000000 netif_set_default
    {standard input}:1124   .text.netif_remove:00000094 $d
    {standard input}:1130   .text.netif_set_default:00000000 $t
    {standard input}:1173   .text.netif_set_default:00000018 $d
    {standard input}:1178   .text.netif_set_up:00000000 $t
    {standard input}:1183   .text.netif_set_up:00000000 netif_set_up
    {standard input}:1238   .text.netif_issue_reports:00000000 $t
    {standard input}:1317   .text.netif_set_down:00000000 $t
    {standard input}:1382   .text.netif_set_link_up:00000000 $t
    {standard input}:1387   .text.netif_set_link_up:00000000 netif_set_link_up
    {standard input}:1452   .text.netif_set_link_down:00000000 $t
    {standard input}:1457   .text.netif_set_link_down:00000000 netif_set_link_down
    {standard input}:1518   .text.netif_set_link_callback:00000000 $t
    {standard input}:1523   .text.netif_set_link_callback:00000000 netif_set_link_callback
    {standard input}:1568   .text.netif_null_output_ip4:00000000 $t
    {standard input}:1613   .text.netif_name_to_index:00000000 $t
    {standard input}:1618   .text.netif_name_to_index:00000000 netif_name_to_index
    {standard input}:1829   .text.netif_find:00000000 netif_find
    {standard input}:1668   .text.netif_index_to_name:00000000 $t
    {standard input}:1673   .text.netif_index_to_name:00000000 netif_index_to_name
    {standard input}:1748   .text.netif_get_by_index:00000000 netif_get_by_index
    {standard input}:1743   .text.netif_get_by_index:00000000 $t
    {standard input}:1819   .text.netif_get_by_index:00000048 $d
    {standard input}:1824   .text.netif_find:00000000 $t
    {standard input}:1920   .text.netif_find:0000006c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ethernet_input
ip4_input
ip_addr_any
tcp_netif_ip_addr_changed
udp_netif_ip_addr_changed
raw_netif_ip_addr_changed
etharp_request
etharp_cleanup_netif
lwip_itoa
atoi
